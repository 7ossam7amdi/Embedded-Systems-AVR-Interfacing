
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000196c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000196c  00001a00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800068  00800068  00001a08  2**0
                  ALLOC
  3 .stab         00001074  00000000  00000000  00001a08  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000bc5  00000000  00000000  00002a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000e0  00000000  00000000  00003641  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000110  00000000  00000000  00003721  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000017e6  00000000  00000000  00003831  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000c71  00000000  00000000  00005017  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000c2c  00000000  00000000  00005c88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000100  00000000  00000000  000068b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000025b  00000000  00000000  000069b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000764  00000000  00000000  00006c0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00007373  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 2b 0b 	jmp	0x1656	; 0x1656 <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ac 36       	cpi	r26, 0x6C	; 108
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	ec e6       	ldi	r30, 0x6C	; 108
      78:	f9 e1       	ldi	r31, 0x19	; 25
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <main>
      8a:	0c 94 b4 0c 	jmp	0x1968	; 0x1968 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_fpadd_parts>:
      92:	a0 e0       	ldi	r26, 0x00	; 0
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <__prologue_saves__>
      9e:	dc 01       	movw	r26, r24
      a0:	2b 01       	movw	r4, r22
      a2:	fa 01       	movw	r30, r20
      a4:	9c 91       	ld	r25, X
      a6:	92 30       	cpi	r25, 0x02	; 2
      a8:	08 f4       	brcc	.+2      	; 0xac <_fpadd_parts+0x1a>
      aa:	39 c1       	rjmp	.+626    	; 0x31e <_fpadd_parts+0x28c>
      ac:	eb 01       	movw	r28, r22
      ae:	88 81       	ld	r24, Y
      b0:	82 30       	cpi	r24, 0x02	; 2
      b2:	08 f4       	brcc	.+2      	; 0xb6 <_fpadd_parts+0x24>
      b4:	33 c1       	rjmp	.+614    	; 0x31c <_fpadd_parts+0x28a>
      b6:	94 30       	cpi	r25, 0x04	; 4
      b8:	69 f4       	brne	.+26     	; 0xd4 <_fpadd_parts+0x42>
      ba:	84 30       	cpi	r24, 0x04	; 4
      bc:	09 f0       	breq	.+2      	; 0xc0 <_fpadd_parts+0x2e>
      be:	2f c1       	rjmp	.+606    	; 0x31e <_fpadd_parts+0x28c>
      c0:	11 96       	adiw	r26, 0x01	; 1
      c2:	9c 91       	ld	r25, X
      c4:	11 97       	sbiw	r26, 0x01	; 1
      c6:	89 81       	ldd	r24, Y+1	; 0x01
      c8:	98 17       	cp	r25, r24
      ca:	09 f4       	brne	.+2      	; 0xce <_fpadd_parts+0x3c>
      cc:	28 c1       	rjmp	.+592    	; 0x31e <_fpadd_parts+0x28c>
      ce:	a0 e6       	ldi	r26, 0x60	; 96
      d0:	b0 e0       	ldi	r27, 0x00	; 0
      d2:	25 c1       	rjmp	.+586    	; 0x31e <_fpadd_parts+0x28c>
      d4:	84 30       	cpi	r24, 0x04	; 4
      d6:	09 f4       	brne	.+2      	; 0xda <_fpadd_parts+0x48>
      d8:	21 c1       	rjmp	.+578    	; 0x31c <_fpadd_parts+0x28a>
      da:	82 30       	cpi	r24, 0x02	; 2
      dc:	a9 f4       	brne	.+42     	; 0x108 <_fpadd_parts+0x76>
      de:	92 30       	cpi	r25, 0x02	; 2
      e0:	09 f0       	breq	.+2      	; 0xe4 <_fpadd_parts+0x52>
      e2:	1d c1       	rjmp	.+570    	; 0x31e <_fpadd_parts+0x28c>
      e4:	9a 01       	movw	r18, r20
      e6:	ad 01       	movw	r20, r26
      e8:	88 e0       	ldi	r24, 0x08	; 8
      ea:	ea 01       	movw	r28, r20
      ec:	09 90       	ld	r0, Y+
      ee:	ae 01       	movw	r20, r28
      f0:	e9 01       	movw	r28, r18
      f2:	09 92       	st	Y+, r0
      f4:	9e 01       	movw	r18, r28
      f6:	81 50       	subi	r24, 0x01	; 1
      f8:	c1 f7       	brne	.-16     	; 0xea <_fpadd_parts+0x58>
      fa:	e2 01       	movw	r28, r4
      fc:	89 81       	ldd	r24, Y+1	; 0x01
      fe:	11 96       	adiw	r26, 0x01	; 1
     100:	9c 91       	ld	r25, X
     102:	89 23       	and	r24, r25
     104:	81 83       	std	Z+1, r24	; 0x01
     106:	08 c1       	rjmp	.+528    	; 0x318 <_fpadd_parts+0x286>
     108:	92 30       	cpi	r25, 0x02	; 2
     10a:	09 f4       	brne	.+2      	; 0x10e <_fpadd_parts+0x7c>
     10c:	07 c1       	rjmp	.+526    	; 0x31c <_fpadd_parts+0x28a>
     10e:	12 96       	adiw	r26, 0x02	; 2
     110:	2d 90       	ld	r2, X+
     112:	3c 90       	ld	r3, X
     114:	13 97       	sbiw	r26, 0x03	; 3
     116:	eb 01       	movw	r28, r22
     118:	8a 81       	ldd	r24, Y+2	; 0x02
     11a:	9b 81       	ldd	r25, Y+3	; 0x03
     11c:	14 96       	adiw	r26, 0x04	; 4
     11e:	ad 90       	ld	r10, X+
     120:	bd 90       	ld	r11, X+
     122:	cd 90       	ld	r12, X+
     124:	dc 90       	ld	r13, X
     126:	17 97       	sbiw	r26, 0x07	; 7
     128:	ec 80       	ldd	r14, Y+4	; 0x04
     12a:	fd 80       	ldd	r15, Y+5	; 0x05
     12c:	0e 81       	ldd	r16, Y+6	; 0x06
     12e:	1f 81       	ldd	r17, Y+7	; 0x07
     130:	91 01       	movw	r18, r2
     132:	28 1b       	sub	r18, r24
     134:	39 0b       	sbc	r19, r25
     136:	b9 01       	movw	r22, r18
     138:	37 ff       	sbrs	r19, 7
     13a:	04 c0       	rjmp	.+8      	; 0x144 <_fpadd_parts+0xb2>
     13c:	66 27       	eor	r22, r22
     13e:	77 27       	eor	r23, r23
     140:	62 1b       	sub	r22, r18
     142:	73 0b       	sbc	r23, r19
     144:	60 32       	cpi	r22, 0x20	; 32
     146:	71 05       	cpc	r23, r1
     148:	0c f0       	brlt	.+2      	; 0x14c <_fpadd_parts+0xba>
     14a:	61 c0       	rjmp	.+194    	; 0x20e <_fpadd_parts+0x17c>
     14c:	12 16       	cp	r1, r18
     14e:	13 06       	cpc	r1, r19
     150:	6c f5       	brge	.+90     	; 0x1ac <_fpadd_parts+0x11a>
     152:	37 01       	movw	r6, r14
     154:	48 01       	movw	r8, r16
     156:	06 2e       	mov	r0, r22
     158:	04 c0       	rjmp	.+8      	; 0x162 <_fpadd_parts+0xd0>
     15a:	96 94       	lsr	r9
     15c:	87 94       	ror	r8
     15e:	77 94       	ror	r7
     160:	67 94       	ror	r6
     162:	0a 94       	dec	r0
     164:	d2 f7       	brpl	.-12     	; 0x15a <_fpadd_parts+0xc8>
     166:	21 e0       	ldi	r18, 0x01	; 1
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	40 e0       	ldi	r20, 0x00	; 0
     16c:	50 e0       	ldi	r21, 0x00	; 0
     16e:	04 c0       	rjmp	.+8      	; 0x178 <_fpadd_parts+0xe6>
     170:	22 0f       	add	r18, r18
     172:	33 1f       	adc	r19, r19
     174:	44 1f       	adc	r20, r20
     176:	55 1f       	adc	r21, r21
     178:	6a 95       	dec	r22
     17a:	d2 f7       	brpl	.-12     	; 0x170 <_fpadd_parts+0xde>
     17c:	21 50       	subi	r18, 0x01	; 1
     17e:	30 40       	sbci	r19, 0x00	; 0
     180:	40 40       	sbci	r20, 0x00	; 0
     182:	50 40       	sbci	r21, 0x00	; 0
     184:	2e 21       	and	r18, r14
     186:	3f 21       	and	r19, r15
     188:	40 23       	and	r20, r16
     18a:	51 23       	and	r21, r17
     18c:	21 15       	cp	r18, r1
     18e:	31 05       	cpc	r19, r1
     190:	41 05       	cpc	r20, r1
     192:	51 05       	cpc	r21, r1
     194:	21 f0       	breq	.+8      	; 0x19e <_fpadd_parts+0x10c>
     196:	21 e0       	ldi	r18, 0x01	; 1
     198:	30 e0       	ldi	r19, 0x00	; 0
     19a:	40 e0       	ldi	r20, 0x00	; 0
     19c:	50 e0       	ldi	r21, 0x00	; 0
     19e:	79 01       	movw	r14, r18
     1a0:	8a 01       	movw	r16, r20
     1a2:	e6 28       	or	r14, r6
     1a4:	f7 28       	or	r15, r7
     1a6:	08 29       	or	r16, r8
     1a8:	19 29       	or	r17, r9
     1aa:	3c c0       	rjmp	.+120    	; 0x224 <_fpadd_parts+0x192>
     1ac:	23 2b       	or	r18, r19
     1ae:	d1 f1       	breq	.+116    	; 0x224 <_fpadd_parts+0x192>
     1b0:	26 0e       	add	r2, r22
     1b2:	37 1e       	adc	r3, r23
     1b4:	35 01       	movw	r6, r10
     1b6:	46 01       	movw	r8, r12
     1b8:	06 2e       	mov	r0, r22
     1ba:	04 c0       	rjmp	.+8      	; 0x1c4 <_fpadd_parts+0x132>
     1bc:	96 94       	lsr	r9
     1be:	87 94       	ror	r8
     1c0:	77 94       	ror	r7
     1c2:	67 94       	ror	r6
     1c4:	0a 94       	dec	r0
     1c6:	d2 f7       	brpl	.-12     	; 0x1bc <_fpadd_parts+0x12a>
     1c8:	21 e0       	ldi	r18, 0x01	; 1
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	40 e0       	ldi	r20, 0x00	; 0
     1ce:	50 e0       	ldi	r21, 0x00	; 0
     1d0:	04 c0       	rjmp	.+8      	; 0x1da <_fpadd_parts+0x148>
     1d2:	22 0f       	add	r18, r18
     1d4:	33 1f       	adc	r19, r19
     1d6:	44 1f       	adc	r20, r20
     1d8:	55 1f       	adc	r21, r21
     1da:	6a 95       	dec	r22
     1dc:	d2 f7       	brpl	.-12     	; 0x1d2 <_fpadd_parts+0x140>
     1de:	21 50       	subi	r18, 0x01	; 1
     1e0:	30 40       	sbci	r19, 0x00	; 0
     1e2:	40 40       	sbci	r20, 0x00	; 0
     1e4:	50 40       	sbci	r21, 0x00	; 0
     1e6:	2a 21       	and	r18, r10
     1e8:	3b 21       	and	r19, r11
     1ea:	4c 21       	and	r20, r12
     1ec:	5d 21       	and	r21, r13
     1ee:	21 15       	cp	r18, r1
     1f0:	31 05       	cpc	r19, r1
     1f2:	41 05       	cpc	r20, r1
     1f4:	51 05       	cpc	r21, r1
     1f6:	21 f0       	breq	.+8      	; 0x200 <_fpadd_parts+0x16e>
     1f8:	21 e0       	ldi	r18, 0x01	; 1
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	40 e0       	ldi	r20, 0x00	; 0
     1fe:	50 e0       	ldi	r21, 0x00	; 0
     200:	59 01       	movw	r10, r18
     202:	6a 01       	movw	r12, r20
     204:	a6 28       	or	r10, r6
     206:	b7 28       	or	r11, r7
     208:	c8 28       	or	r12, r8
     20a:	d9 28       	or	r13, r9
     20c:	0b c0       	rjmp	.+22     	; 0x224 <_fpadd_parts+0x192>
     20e:	82 15       	cp	r24, r2
     210:	93 05       	cpc	r25, r3
     212:	2c f0       	brlt	.+10     	; 0x21e <_fpadd_parts+0x18c>
     214:	1c 01       	movw	r2, r24
     216:	aa 24       	eor	r10, r10
     218:	bb 24       	eor	r11, r11
     21a:	65 01       	movw	r12, r10
     21c:	03 c0       	rjmp	.+6      	; 0x224 <_fpadd_parts+0x192>
     21e:	ee 24       	eor	r14, r14
     220:	ff 24       	eor	r15, r15
     222:	87 01       	movw	r16, r14
     224:	11 96       	adiw	r26, 0x01	; 1
     226:	9c 91       	ld	r25, X
     228:	d2 01       	movw	r26, r4
     22a:	11 96       	adiw	r26, 0x01	; 1
     22c:	8c 91       	ld	r24, X
     22e:	98 17       	cp	r25, r24
     230:	09 f4       	brne	.+2      	; 0x234 <_fpadd_parts+0x1a2>
     232:	45 c0       	rjmp	.+138    	; 0x2be <_fpadd_parts+0x22c>
     234:	99 23       	and	r25, r25
     236:	39 f0       	breq	.+14     	; 0x246 <_fpadd_parts+0x1b4>
     238:	a8 01       	movw	r20, r16
     23a:	97 01       	movw	r18, r14
     23c:	2a 19       	sub	r18, r10
     23e:	3b 09       	sbc	r19, r11
     240:	4c 09       	sbc	r20, r12
     242:	5d 09       	sbc	r21, r13
     244:	06 c0       	rjmp	.+12     	; 0x252 <_fpadd_parts+0x1c0>
     246:	a6 01       	movw	r20, r12
     248:	95 01       	movw	r18, r10
     24a:	2e 19       	sub	r18, r14
     24c:	3f 09       	sbc	r19, r15
     24e:	40 0b       	sbc	r20, r16
     250:	51 0b       	sbc	r21, r17
     252:	57 fd       	sbrc	r21, 7
     254:	08 c0       	rjmp	.+16     	; 0x266 <_fpadd_parts+0x1d4>
     256:	11 82       	std	Z+1, r1	; 0x01
     258:	33 82       	std	Z+3, r3	; 0x03
     25a:	22 82       	std	Z+2, r2	; 0x02
     25c:	24 83       	std	Z+4, r18	; 0x04
     25e:	35 83       	std	Z+5, r19	; 0x05
     260:	46 83       	std	Z+6, r20	; 0x06
     262:	57 83       	std	Z+7, r21	; 0x07
     264:	1d c0       	rjmp	.+58     	; 0x2a0 <_fpadd_parts+0x20e>
     266:	81 e0       	ldi	r24, 0x01	; 1
     268:	81 83       	std	Z+1, r24	; 0x01
     26a:	33 82       	std	Z+3, r3	; 0x03
     26c:	22 82       	std	Z+2, r2	; 0x02
     26e:	88 27       	eor	r24, r24
     270:	99 27       	eor	r25, r25
     272:	dc 01       	movw	r26, r24
     274:	82 1b       	sub	r24, r18
     276:	93 0b       	sbc	r25, r19
     278:	a4 0b       	sbc	r26, r20
     27a:	b5 0b       	sbc	r27, r21
     27c:	84 83       	std	Z+4, r24	; 0x04
     27e:	95 83       	std	Z+5, r25	; 0x05
     280:	a6 83       	std	Z+6, r26	; 0x06
     282:	b7 83       	std	Z+7, r27	; 0x07
     284:	0d c0       	rjmp	.+26     	; 0x2a0 <_fpadd_parts+0x20e>
     286:	22 0f       	add	r18, r18
     288:	33 1f       	adc	r19, r19
     28a:	44 1f       	adc	r20, r20
     28c:	55 1f       	adc	r21, r21
     28e:	24 83       	std	Z+4, r18	; 0x04
     290:	35 83       	std	Z+5, r19	; 0x05
     292:	46 83       	std	Z+6, r20	; 0x06
     294:	57 83       	std	Z+7, r21	; 0x07
     296:	82 81       	ldd	r24, Z+2	; 0x02
     298:	93 81       	ldd	r25, Z+3	; 0x03
     29a:	01 97       	sbiw	r24, 0x01	; 1
     29c:	93 83       	std	Z+3, r25	; 0x03
     29e:	82 83       	std	Z+2, r24	; 0x02
     2a0:	24 81       	ldd	r18, Z+4	; 0x04
     2a2:	35 81       	ldd	r19, Z+5	; 0x05
     2a4:	46 81       	ldd	r20, Z+6	; 0x06
     2a6:	57 81       	ldd	r21, Z+7	; 0x07
     2a8:	da 01       	movw	r26, r20
     2aa:	c9 01       	movw	r24, r18
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	a1 09       	sbc	r26, r1
     2b0:	b1 09       	sbc	r27, r1
     2b2:	8f 5f       	subi	r24, 0xFF	; 255
     2b4:	9f 4f       	sbci	r25, 0xFF	; 255
     2b6:	af 4f       	sbci	r26, 0xFF	; 255
     2b8:	bf 43       	sbci	r27, 0x3F	; 63
     2ba:	28 f3       	brcs	.-54     	; 0x286 <_fpadd_parts+0x1f4>
     2bc:	0b c0       	rjmp	.+22     	; 0x2d4 <_fpadd_parts+0x242>
     2be:	91 83       	std	Z+1, r25	; 0x01
     2c0:	33 82       	std	Z+3, r3	; 0x03
     2c2:	22 82       	std	Z+2, r2	; 0x02
     2c4:	ea 0c       	add	r14, r10
     2c6:	fb 1c       	adc	r15, r11
     2c8:	0c 1d       	adc	r16, r12
     2ca:	1d 1d       	adc	r17, r13
     2cc:	e4 82       	std	Z+4, r14	; 0x04
     2ce:	f5 82       	std	Z+5, r15	; 0x05
     2d0:	06 83       	std	Z+6, r16	; 0x06
     2d2:	17 83       	std	Z+7, r17	; 0x07
     2d4:	83 e0       	ldi	r24, 0x03	; 3
     2d6:	80 83       	st	Z, r24
     2d8:	24 81       	ldd	r18, Z+4	; 0x04
     2da:	35 81       	ldd	r19, Z+5	; 0x05
     2dc:	46 81       	ldd	r20, Z+6	; 0x06
     2de:	57 81       	ldd	r21, Z+7	; 0x07
     2e0:	57 ff       	sbrs	r21, 7
     2e2:	1a c0       	rjmp	.+52     	; 0x318 <_fpadd_parts+0x286>
     2e4:	c9 01       	movw	r24, r18
     2e6:	aa 27       	eor	r26, r26
     2e8:	97 fd       	sbrc	r25, 7
     2ea:	a0 95       	com	r26
     2ec:	ba 2f       	mov	r27, r26
     2ee:	81 70       	andi	r24, 0x01	; 1
     2f0:	90 70       	andi	r25, 0x00	; 0
     2f2:	a0 70       	andi	r26, 0x00	; 0
     2f4:	b0 70       	andi	r27, 0x00	; 0
     2f6:	56 95       	lsr	r21
     2f8:	47 95       	ror	r20
     2fa:	37 95       	ror	r19
     2fc:	27 95       	ror	r18
     2fe:	82 2b       	or	r24, r18
     300:	93 2b       	or	r25, r19
     302:	a4 2b       	or	r26, r20
     304:	b5 2b       	or	r27, r21
     306:	84 83       	std	Z+4, r24	; 0x04
     308:	95 83       	std	Z+5, r25	; 0x05
     30a:	a6 83       	std	Z+6, r26	; 0x06
     30c:	b7 83       	std	Z+7, r27	; 0x07
     30e:	82 81       	ldd	r24, Z+2	; 0x02
     310:	93 81       	ldd	r25, Z+3	; 0x03
     312:	01 96       	adiw	r24, 0x01	; 1
     314:	93 83       	std	Z+3, r25	; 0x03
     316:	82 83       	std	Z+2, r24	; 0x02
     318:	df 01       	movw	r26, r30
     31a:	01 c0       	rjmp	.+2      	; 0x31e <_fpadd_parts+0x28c>
     31c:	d2 01       	movw	r26, r4
     31e:	cd 01       	movw	r24, r26
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62
     324:	e2 e1       	ldi	r30, 0x12	; 18
     326:	0c 94 99 0c 	jmp	0x1932	; 0x1932 <__epilogue_restores__>

0000032a <__subsf3>:
     32a:	a0 e2       	ldi	r26, 0x20	; 32
     32c:	b0 e0       	ldi	r27, 0x00	; 0
     32e:	eb e9       	ldi	r30, 0x9B	; 155
     330:	f1 e0       	ldi	r31, 0x01	; 1
     332:	0c 94 89 0c 	jmp	0x1912	; 0x1912 <__prologue_saves__+0x18>
     336:	69 83       	std	Y+1, r22	; 0x01
     338:	7a 83       	std	Y+2, r23	; 0x02
     33a:	8b 83       	std	Y+3, r24	; 0x03
     33c:	9c 83       	std	Y+4, r25	; 0x04
     33e:	2d 83       	std	Y+5, r18	; 0x05
     340:	3e 83       	std	Y+6, r19	; 0x06
     342:	4f 83       	std	Y+7, r20	; 0x07
     344:	58 87       	std	Y+8, r21	; 0x08
     346:	e9 e0       	ldi	r30, 0x09	; 9
     348:	ee 2e       	mov	r14, r30
     34a:	f1 2c       	mov	r15, r1
     34c:	ec 0e       	add	r14, r28
     34e:	fd 1e       	adc	r15, r29
     350:	ce 01       	movw	r24, r28
     352:	01 96       	adiw	r24, 0x01	; 1
     354:	b7 01       	movw	r22, r14
     356:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     35a:	8e 01       	movw	r16, r28
     35c:	0f 5e       	subi	r16, 0xEF	; 239
     35e:	1f 4f       	sbci	r17, 0xFF	; 255
     360:	ce 01       	movw	r24, r28
     362:	05 96       	adiw	r24, 0x05	; 5
     364:	b8 01       	movw	r22, r16
     366:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     36a:	8a 89       	ldd	r24, Y+18	; 0x12
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	89 27       	eor	r24, r25
     370:	8a 8b       	std	Y+18, r24	; 0x12
     372:	c7 01       	movw	r24, r14
     374:	b8 01       	movw	r22, r16
     376:	ae 01       	movw	r20, r28
     378:	47 5e       	subi	r20, 0xE7	; 231
     37a:	5f 4f       	sbci	r21, 0xFF	; 255
     37c:	0e 94 49 00 	call	0x92	; 0x92 <_fpadd_parts>
     380:	0e 94 c9 03 	call	0x792	; 0x792 <__pack_f>
     384:	a0 96       	adiw	r28, 0x20	; 32
     386:	e6 e0       	ldi	r30, 0x06	; 6
     388:	0c 94 a5 0c 	jmp	0x194a	; 0x194a <__epilogue_restores__+0x18>

0000038c <__addsf3>:
     38c:	a0 e2       	ldi	r26, 0x20	; 32
     38e:	b0 e0       	ldi	r27, 0x00	; 0
     390:	ec ec       	ldi	r30, 0xCC	; 204
     392:	f1 e0       	ldi	r31, 0x01	; 1
     394:	0c 94 89 0c 	jmp	0x1912	; 0x1912 <__prologue_saves__+0x18>
     398:	69 83       	std	Y+1, r22	; 0x01
     39a:	7a 83       	std	Y+2, r23	; 0x02
     39c:	8b 83       	std	Y+3, r24	; 0x03
     39e:	9c 83       	std	Y+4, r25	; 0x04
     3a0:	2d 83       	std	Y+5, r18	; 0x05
     3a2:	3e 83       	std	Y+6, r19	; 0x06
     3a4:	4f 83       	std	Y+7, r20	; 0x07
     3a6:	58 87       	std	Y+8, r21	; 0x08
     3a8:	f9 e0       	ldi	r31, 0x09	; 9
     3aa:	ef 2e       	mov	r14, r31
     3ac:	f1 2c       	mov	r15, r1
     3ae:	ec 0e       	add	r14, r28
     3b0:	fd 1e       	adc	r15, r29
     3b2:	ce 01       	movw	r24, r28
     3b4:	01 96       	adiw	r24, 0x01	; 1
     3b6:	b7 01       	movw	r22, r14
     3b8:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     3bc:	8e 01       	movw	r16, r28
     3be:	0f 5e       	subi	r16, 0xEF	; 239
     3c0:	1f 4f       	sbci	r17, 0xFF	; 255
     3c2:	ce 01       	movw	r24, r28
     3c4:	05 96       	adiw	r24, 0x05	; 5
     3c6:	b8 01       	movw	r22, r16
     3c8:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     3cc:	c7 01       	movw	r24, r14
     3ce:	b8 01       	movw	r22, r16
     3d0:	ae 01       	movw	r20, r28
     3d2:	47 5e       	subi	r20, 0xE7	; 231
     3d4:	5f 4f       	sbci	r21, 0xFF	; 255
     3d6:	0e 94 49 00 	call	0x92	; 0x92 <_fpadd_parts>
     3da:	0e 94 c9 03 	call	0x792	; 0x792 <__pack_f>
     3de:	a0 96       	adiw	r28, 0x20	; 32
     3e0:	e6 e0       	ldi	r30, 0x06	; 6
     3e2:	0c 94 a5 0c 	jmp	0x194a	; 0x194a <__epilogue_restores__+0x18>

000003e6 <__mulsf3>:
     3e6:	a0 e2       	ldi	r26, 0x20	; 32
     3e8:	b0 e0       	ldi	r27, 0x00	; 0
     3ea:	e9 ef       	ldi	r30, 0xF9	; 249
     3ec:	f1 e0       	ldi	r31, 0x01	; 1
     3ee:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <__prologue_saves__>
     3f2:	69 83       	std	Y+1, r22	; 0x01
     3f4:	7a 83       	std	Y+2, r23	; 0x02
     3f6:	8b 83       	std	Y+3, r24	; 0x03
     3f8:	9c 83       	std	Y+4, r25	; 0x04
     3fa:	2d 83       	std	Y+5, r18	; 0x05
     3fc:	3e 83       	std	Y+6, r19	; 0x06
     3fe:	4f 83       	std	Y+7, r20	; 0x07
     400:	58 87       	std	Y+8, r21	; 0x08
     402:	ce 01       	movw	r24, r28
     404:	01 96       	adiw	r24, 0x01	; 1
     406:	be 01       	movw	r22, r28
     408:	67 5f       	subi	r22, 0xF7	; 247
     40a:	7f 4f       	sbci	r23, 0xFF	; 255
     40c:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     410:	ce 01       	movw	r24, r28
     412:	05 96       	adiw	r24, 0x05	; 5
     414:	be 01       	movw	r22, r28
     416:	6f 5e       	subi	r22, 0xEF	; 239
     418:	7f 4f       	sbci	r23, 0xFF	; 255
     41a:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     41e:	99 85       	ldd	r25, Y+9	; 0x09
     420:	92 30       	cpi	r25, 0x02	; 2
     422:	88 f0       	brcs	.+34     	; 0x446 <__mulsf3+0x60>
     424:	89 89       	ldd	r24, Y+17	; 0x11
     426:	82 30       	cpi	r24, 0x02	; 2
     428:	c8 f0       	brcs	.+50     	; 0x45c <__mulsf3+0x76>
     42a:	94 30       	cpi	r25, 0x04	; 4
     42c:	19 f4       	brne	.+6      	; 0x434 <__mulsf3+0x4e>
     42e:	82 30       	cpi	r24, 0x02	; 2
     430:	51 f4       	brne	.+20     	; 0x446 <__mulsf3+0x60>
     432:	04 c0       	rjmp	.+8      	; 0x43c <__mulsf3+0x56>
     434:	84 30       	cpi	r24, 0x04	; 4
     436:	29 f4       	brne	.+10     	; 0x442 <__mulsf3+0x5c>
     438:	92 30       	cpi	r25, 0x02	; 2
     43a:	81 f4       	brne	.+32     	; 0x45c <__mulsf3+0x76>
     43c:	80 e6       	ldi	r24, 0x60	; 96
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	c6 c0       	rjmp	.+396    	; 0x5ce <__stack+0x16f>
     442:	92 30       	cpi	r25, 0x02	; 2
     444:	49 f4       	brne	.+18     	; 0x458 <__mulsf3+0x72>
     446:	20 e0       	ldi	r18, 0x00	; 0
     448:	9a 85       	ldd	r25, Y+10	; 0x0a
     44a:	8a 89       	ldd	r24, Y+18	; 0x12
     44c:	98 13       	cpse	r25, r24
     44e:	21 e0       	ldi	r18, 0x01	; 1
     450:	2a 87       	std	Y+10, r18	; 0x0a
     452:	ce 01       	movw	r24, r28
     454:	09 96       	adiw	r24, 0x09	; 9
     456:	bb c0       	rjmp	.+374    	; 0x5ce <__stack+0x16f>
     458:	82 30       	cpi	r24, 0x02	; 2
     45a:	49 f4       	brne	.+18     	; 0x46e <__stack+0xf>
     45c:	20 e0       	ldi	r18, 0x00	; 0
     45e:	9a 85       	ldd	r25, Y+10	; 0x0a
     460:	8a 89       	ldd	r24, Y+18	; 0x12
     462:	98 13       	cpse	r25, r24
     464:	21 e0       	ldi	r18, 0x01	; 1
     466:	2a 8b       	std	Y+18, r18	; 0x12
     468:	ce 01       	movw	r24, r28
     46a:	41 96       	adiw	r24, 0x11	; 17
     46c:	b0 c0       	rjmp	.+352    	; 0x5ce <__stack+0x16f>
     46e:	2d 84       	ldd	r2, Y+13	; 0x0d
     470:	3e 84       	ldd	r3, Y+14	; 0x0e
     472:	4f 84       	ldd	r4, Y+15	; 0x0f
     474:	58 88       	ldd	r5, Y+16	; 0x10
     476:	6d 88       	ldd	r6, Y+21	; 0x15
     478:	7e 88       	ldd	r7, Y+22	; 0x16
     47a:	8f 88       	ldd	r8, Y+23	; 0x17
     47c:	98 8c       	ldd	r9, Y+24	; 0x18
     47e:	ee 24       	eor	r14, r14
     480:	ff 24       	eor	r15, r15
     482:	87 01       	movw	r16, r14
     484:	aa 24       	eor	r10, r10
     486:	bb 24       	eor	r11, r11
     488:	65 01       	movw	r12, r10
     48a:	40 e0       	ldi	r20, 0x00	; 0
     48c:	50 e0       	ldi	r21, 0x00	; 0
     48e:	60 e0       	ldi	r22, 0x00	; 0
     490:	70 e0       	ldi	r23, 0x00	; 0
     492:	e0 e0       	ldi	r30, 0x00	; 0
     494:	f0 e0       	ldi	r31, 0x00	; 0
     496:	c1 01       	movw	r24, r2
     498:	81 70       	andi	r24, 0x01	; 1
     49a:	90 70       	andi	r25, 0x00	; 0
     49c:	89 2b       	or	r24, r25
     49e:	e9 f0       	breq	.+58     	; 0x4da <__stack+0x7b>
     4a0:	e6 0c       	add	r14, r6
     4a2:	f7 1c       	adc	r15, r7
     4a4:	08 1d       	adc	r16, r8
     4a6:	19 1d       	adc	r17, r9
     4a8:	9a 01       	movw	r18, r20
     4aa:	ab 01       	movw	r20, r22
     4ac:	2a 0d       	add	r18, r10
     4ae:	3b 1d       	adc	r19, r11
     4b0:	4c 1d       	adc	r20, r12
     4b2:	5d 1d       	adc	r21, r13
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	a0 e0       	ldi	r26, 0x00	; 0
     4ba:	b0 e0       	ldi	r27, 0x00	; 0
     4bc:	e6 14       	cp	r14, r6
     4be:	f7 04       	cpc	r15, r7
     4c0:	08 05       	cpc	r16, r8
     4c2:	19 05       	cpc	r17, r9
     4c4:	20 f4       	brcc	.+8      	; 0x4ce <__stack+0x6f>
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	a0 e0       	ldi	r26, 0x00	; 0
     4cc:	b0 e0       	ldi	r27, 0x00	; 0
     4ce:	ba 01       	movw	r22, r20
     4d0:	a9 01       	movw	r20, r18
     4d2:	48 0f       	add	r20, r24
     4d4:	59 1f       	adc	r21, r25
     4d6:	6a 1f       	adc	r22, r26
     4d8:	7b 1f       	adc	r23, r27
     4da:	aa 0c       	add	r10, r10
     4dc:	bb 1c       	adc	r11, r11
     4de:	cc 1c       	adc	r12, r12
     4e0:	dd 1c       	adc	r13, r13
     4e2:	97 fe       	sbrs	r9, 7
     4e4:	08 c0       	rjmp	.+16     	; 0x4f6 <__stack+0x97>
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	a0 e0       	ldi	r26, 0x00	; 0
     4ec:	b0 e0       	ldi	r27, 0x00	; 0
     4ee:	a8 2a       	or	r10, r24
     4f0:	b9 2a       	or	r11, r25
     4f2:	ca 2a       	or	r12, r26
     4f4:	db 2a       	or	r13, r27
     4f6:	31 96       	adiw	r30, 0x01	; 1
     4f8:	e0 32       	cpi	r30, 0x20	; 32
     4fa:	f1 05       	cpc	r31, r1
     4fc:	49 f0       	breq	.+18     	; 0x510 <__stack+0xb1>
     4fe:	66 0c       	add	r6, r6
     500:	77 1c       	adc	r7, r7
     502:	88 1c       	adc	r8, r8
     504:	99 1c       	adc	r9, r9
     506:	56 94       	lsr	r5
     508:	47 94       	ror	r4
     50a:	37 94       	ror	r3
     50c:	27 94       	ror	r2
     50e:	c3 cf       	rjmp	.-122    	; 0x496 <__stack+0x37>
     510:	fa 85       	ldd	r31, Y+10	; 0x0a
     512:	ea 89       	ldd	r30, Y+18	; 0x12
     514:	2b 89       	ldd	r18, Y+19	; 0x13
     516:	3c 89       	ldd	r19, Y+20	; 0x14
     518:	8b 85       	ldd	r24, Y+11	; 0x0b
     51a:	9c 85       	ldd	r25, Y+12	; 0x0c
     51c:	28 0f       	add	r18, r24
     51e:	39 1f       	adc	r19, r25
     520:	2e 5f       	subi	r18, 0xFE	; 254
     522:	3f 4f       	sbci	r19, 0xFF	; 255
     524:	17 c0       	rjmp	.+46     	; 0x554 <__stack+0xf5>
     526:	ca 01       	movw	r24, r20
     528:	81 70       	andi	r24, 0x01	; 1
     52a:	90 70       	andi	r25, 0x00	; 0
     52c:	89 2b       	or	r24, r25
     52e:	61 f0       	breq	.+24     	; 0x548 <__stack+0xe9>
     530:	16 95       	lsr	r17
     532:	07 95       	ror	r16
     534:	f7 94       	ror	r15
     536:	e7 94       	ror	r14
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	a0 e0       	ldi	r26, 0x00	; 0
     53e:	b0 e8       	ldi	r27, 0x80	; 128
     540:	e8 2a       	or	r14, r24
     542:	f9 2a       	or	r15, r25
     544:	0a 2b       	or	r16, r26
     546:	1b 2b       	or	r17, r27
     548:	76 95       	lsr	r23
     54a:	67 95       	ror	r22
     54c:	57 95       	ror	r21
     54e:	47 95       	ror	r20
     550:	2f 5f       	subi	r18, 0xFF	; 255
     552:	3f 4f       	sbci	r19, 0xFF	; 255
     554:	77 fd       	sbrc	r23, 7
     556:	e7 cf       	rjmp	.-50     	; 0x526 <__stack+0xc7>
     558:	0c c0       	rjmp	.+24     	; 0x572 <__stack+0x113>
     55a:	44 0f       	add	r20, r20
     55c:	55 1f       	adc	r21, r21
     55e:	66 1f       	adc	r22, r22
     560:	77 1f       	adc	r23, r23
     562:	17 fd       	sbrc	r17, 7
     564:	41 60       	ori	r20, 0x01	; 1
     566:	ee 0c       	add	r14, r14
     568:	ff 1c       	adc	r15, r15
     56a:	00 1f       	adc	r16, r16
     56c:	11 1f       	adc	r17, r17
     56e:	21 50       	subi	r18, 0x01	; 1
     570:	30 40       	sbci	r19, 0x00	; 0
     572:	40 30       	cpi	r20, 0x00	; 0
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	59 07       	cpc	r21, r25
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	69 07       	cpc	r22, r25
     57c:	90 e4       	ldi	r25, 0x40	; 64
     57e:	79 07       	cpc	r23, r25
     580:	60 f3       	brcs	.-40     	; 0x55a <__stack+0xfb>
     582:	2b 8f       	std	Y+27, r18	; 0x1b
     584:	3c 8f       	std	Y+28, r19	; 0x1c
     586:	db 01       	movw	r26, r22
     588:	ca 01       	movw	r24, r20
     58a:	8f 77       	andi	r24, 0x7F	; 127
     58c:	90 70       	andi	r25, 0x00	; 0
     58e:	a0 70       	andi	r26, 0x00	; 0
     590:	b0 70       	andi	r27, 0x00	; 0
     592:	80 34       	cpi	r24, 0x40	; 64
     594:	91 05       	cpc	r25, r1
     596:	a1 05       	cpc	r26, r1
     598:	b1 05       	cpc	r27, r1
     59a:	61 f4       	brne	.+24     	; 0x5b4 <__stack+0x155>
     59c:	47 fd       	sbrc	r20, 7
     59e:	0a c0       	rjmp	.+20     	; 0x5b4 <__stack+0x155>
     5a0:	e1 14       	cp	r14, r1
     5a2:	f1 04       	cpc	r15, r1
     5a4:	01 05       	cpc	r16, r1
     5a6:	11 05       	cpc	r17, r1
     5a8:	29 f0       	breq	.+10     	; 0x5b4 <__stack+0x155>
     5aa:	40 5c       	subi	r20, 0xC0	; 192
     5ac:	5f 4f       	sbci	r21, 0xFF	; 255
     5ae:	6f 4f       	sbci	r22, 0xFF	; 255
     5b0:	7f 4f       	sbci	r23, 0xFF	; 255
     5b2:	40 78       	andi	r20, 0x80	; 128
     5b4:	1a 8e       	std	Y+26, r1	; 0x1a
     5b6:	fe 17       	cp	r31, r30
     5b8:	11 f0       	breq	.+4      	; 0x5be <__stack+0x15f>
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	8a 8f       	std	Y+26, r24	; 0x1a
     5be:	4d 8f       	std	Y+29, r20	; 0x1d
     5c0:	5e 8f       	std	Y+30, r21	; 0x1e
     5c2:	6f 8f       	std	Y+31, r22	; 0x1f
     5c4:	78 a3       	std	Y+32, r23	; 0x20
     5c6:	83 e0       	ldi	r24, 0x03	; 3
     5c8:	89 8f       	std	Y+25, r24	; 0x19
     5ca:	ce 01       	movw	r24, r28
     5cc:	49 96       	adiw	r24, 0x19	; 25
     5ce:	0e 94 c9 03 	call	0x792	; 0x792 <__pack_f>
     5d2:	a0 96       	adiw	r28, 0x20	; 32
     5d4:	e2 e1       	ldi	r30, 0x12	; 18
     5d6:	0c 94 99 0c 	jmp	0x1932	; 0x1932 <__epilogue_restores__>

000005da <__divsf3>:
     5da:	a8 e1       	ldi	r26, 0x18	; 24
     5dc:	b0 e0       	ldi	r27, 0x00	; 0
     5de:	e3 ef       	ldi	r30, 0xF3	; 243
     5e0:	f2 e0       	ldi	r31, 0x02	; 2
     5e2:	0c 94 85 0c 	jmp	0x190a	; 0x190a <__prologue_saves__+0x10>
     5e6:	69 83       	std	Y+1, r22	; 0x01
     5e8:	7a 83       	std	Y+2, r23	; 0x02
     5ea:	8b 83       	std	Y+3, r24	; 0x03
     5ec:	9c 83       	std	Y+4, r25	; 0x04
     5ee:	2d 83       	std	Y+5, r18	; 0x05
     5f0:	3e 83       	std	Y+6, r19	; 0x06
     5f2:	4f 83       	std	Y+7, r20	; 0x07
     5f4:	58 87       	std	Y+8, r21	; 0x08
     5f6:	b9 e0       	ldi	r27, 0x09	; 9
     5f8:	eb 2e       	mov	r14, r27
     5fa:	f1 2c       	mov	r15, r1
     5fc:	ec 0e       	add	r14, r28
     5fe:	fd 1e       	adc	r15, r29
     600:	ce 01       	movw	r24, r28
     602:	01 96       	adiw	r24, 0x01	; 1
     604:	b7 01       	movw	r22, r14
     606:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     60a:	8e 01       	movw	r16, r28
     60c:	0f 5e       	subi	r16, 0xEF	; 239
     60e:	1f 4f       	sbci	r17, 0xFF	; 255
     610:	ce 01       	movw	r24, r28
     612:	05 96       	adiw	r24, 0x05	; 5
     614:	b8 01       	movw	r22, r16
     616:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     61a:	29 85       	ldd	r18, Y+9	; 0x09
     61c:	22 30       	cpi	r18, 0x02	; 2
     61e:	08 f4       	brcc	.+2      	; 0x622 <__divsf3+0x48>
     620:	7e c0       	rjmp	.+252    	; 0x71e <__divsf3+0x144>
     622:	39 89       	ldd	r19, Y+17	; 0x11
     624:	32 30       	cpi	r19, 0x02	; 2
     626:	10 f4       	brcc	.+4      	; 0x62c <__divsf3+0x52>
     628:	b8 01       	movw	r22, r16
     62a:	7c c0       	rjmp	.+248    	; 0x724 <__divsf3+0x14a>
     62c:	8a 85       	ldd	r24, Y+10	; 0x0a
     62e:	9a 89       	ldd	r25, Y+18	; 0x12
     630:	89 27       	eor	r24, r25
     632:	8a 87       	std	Y+10, r24	; 0x0a
     634:	24 30       	cpi	r18, 0x04	; 4
     636:	11 f0       	breq	.+4      	; 0x63c <__divsf3+0x62>
     638:	22 30       	cpi	r18, 0x02	; 2
     63a:	31 f4       	brne	.+12     	; 0x648 <__divsf3+0x6e>
     63c:	23 17       	cp	r18, r19
     63e:	09 f0       	breq	.+2      	; 0x642 <__divsf3+0x68>
     640:	6e c0       	rjmp	.+220    	; 0x71e <__divsf3+0x144>
     642:	60 e6       	ldi	r22, 0x60	; 96
     644:	70 e0       	ldi	r23, 0x00	; 0
     646:	6e c0       	rjmp	.+220    	; 0x724 <__divsf3+0x14a>
     648:	34 30       	cpi	r19, 0x04	; 4
     64a:	39 f4       	brne	.+14     	; 0x65a <__divsf3+0x80>
     64c:	1d 86       	std	Y+13, r1	; 0x0d
     64e:	1e 86       	std	Y+14, r1	; 0x0e
     650:	1f 86       	std	Y+15, r1	; 0x0f
     652:	18 8a       	std	Y+16, r1	; 0x10
     654:	1c 86       	std	Y+12, r1	; 0x0c
     656:	1b 86       	std	Y+11, r1	; 0x0b
     658:	04 c0       	rjmp	.+8      	; 0x662 <__divsf3+0x88>
     65a:	32 30       	cpi	r19, 0x02	; 2
     65c:	21 f4       	brne	.+8      	; 0x666 <__divsf3+0x8c>
     65e:	84 e0       	ldi	r24, 0x04	; 4
     660:	89 87       	std	Y+9, r24	; 0x09
     662:	b7 01       	movw	r22, r14
     664:	5f c0       	rjmp	.+190    	; 0x724 <__divsf3+0x14a>
     666:	2b 85       	ldd	r18, Y+11	; 0x0b
     668:	3c 85       	ldd	r19, Y+12	; 0x0c
     66a:	8b 89       	ldd	r24, Y+19	; 0x13
     66c:	9c 89       	ldd	r25, Y+20	; 0x14
     66e:	28 1b       	sub	r18, r24
     670:	39 0b       	sbc	r19, r25
     672:	3c 87       	std	Y+12, r19	; 0x0c
     674:	2b 87       	std	Y+11, r18	; 0x0b
     676:	ed 84       	ldd	r14, Y+13	; 0x0d
     678:	fe 84       	ldd	r15, Y+14	; 0x0e
     67a:	0f 85       	ldd	r16, Y+15	; 0x0f
     67c:	18 89       	ldd	r17, Y+16	; 0x10
     67e:	ad 88       	ldd	r10, Y+21	; 0x15
     680:	be 88       	ldd	r11, Y+22	; 0x16
     682:	cf 88       	ldd	r12, Y+23	; 0x17
     684:	d8 8c       	ldd	r13, Y+24	; 0x18
     686:	ea 14       	cp	r14, r10
     688:	fb 04       	cpc	r15, r11
     68a:	0c 05       	cpc	r16, r12
     68c:	1d 05       	cpc	r17, r13
     68e:	40 f4       	brcc	.+16     	; 0x6a0 <__divsf3+0xc6>
     690:	ee 0c       	add	r14, r14
     692:	ff 1c       	adc	r15, r15
     694:	00 1f       	adc	r16, r16
     696:	11 1f       	adc	r17, r17
     698:	21 50       	subi	r18, 0x01	; 1
     69a:	30 40       	sbci	r19, 0x00	; 0
     69c:	3c 87       	std	Y+12, r19	; 0x0c
     69e:	2b 87       	std	Y+11, r18	; 0x0b
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	40 e0       	ldi	r20, 0x00	; 0
     6a6:	50 e0       	ldi	r21, 0x00	; 0
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	a0 e0       	ldi	r26, 0x00	; 0
     6ae:	b0 e4       	ldi	r27, 0x40	; 64
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	ea 14       	cp	r14, r10
     6b6:	fb 04       	cpc	r15, r11
     6b8:	0c 05       	cpc	r16, r12
     6ba:	1d 05       	cpc	r17, r13
     6bc:	40 f0       	brcs	.+16     	; 0x6ce <__divsf3+0xf4>
     6be:	28 2b       	or	r18, r24
     6c0:	39 2b       	or	r19, r25
     6c2:	4a 2b       	or	r20, r26
     6c4:	5b 2b       	or	r21, r27
     6c6:	ea 18       	sub	r14, r10
     6c8:	fb 08       	sbc	r15, r11
     6ca:	0c 09       	sbc	r16, r12
     6cc:	1d 09       	sbc	r17, r13
     6ce:	b6 95       	lsr	r27
     6d0:	a7 95       	ror	r26
     6d2:	97 95       	ror	r25
     6d4:	87 95       	ror	r24
     6d6:	ee 0c       	add	r14, r14
     6d8:	ff 1c       	adc	r15, r15
     6da:	00 1f       	adc	r16, r16
     6dc:	11 1f       	adc	r17, r17
     6de:	6f 5f       	subi	r22, 0xFF	; 255
     6e0:	7f 4f       	sbci	r23, 0xFF	; 255
     6e2:	6f 31       	cpi	r22, 0x1F	; 31
     6e4:	71 05       	cpc	r23, r1
     6e6:	31 f7       	brne	.-52     	; 0x6b4 <__divsf3+0xda>
     6e8:	da 01       	movw	r26, r20
     6ea:	c9 01       	movw	r24, r18
     6ec:	8f 77       	andi	r24, 0x7F	; 127
     6ee:	90 70       	andi	r25, 0x00	; 0
     6f0:	a0 70       	andi	r26, 0x00	; 0
     6f2:	b0 70       	andi	r27, 0x00	; 0
     6f4:	80 34       	cpi	r24, 0x40	; 64
     6f6:	91 05       	cpc	r25, r1
     6f8:	a1 05       	cpc	r26, r1
     6fa:	b1 05       	cpc	r27, r1
     6fc:	61 f4       	brne	.+24     	; 0x716 <__divsf3+0x13c>
     6fe:	27 fd       	sbrc	r18, 7
     700:	0a c0       	rjmp	.+20     	; 0x716 <__divsf3+0x13c>
     702:	e1 14       	cp	r14, r1
     704:	f1 04       	cpc	r15, r1
     706:	01 05       	cpc	r16, r1
     708:	11 05       	cpc	r17, r1
     70a:	29 f0       	breq	.+10     	; 0x716 <__divsf3+0x13c>
     70c:	20 5c       	subi	r18, 0xC0	; 192
     70e:	3f 4f       	sbci	r19, 0xFF	; 255
     710:	4f 4f       	sbci	r20, 0xFF	; 255
     712:	5f 4f       	sbci	r21, 0xFF	; 255
     714:	20 78       	andi	r18, 0x80	; 128
     716:	2d 87       	std	Y+13, r18	; 0x0d
     718:	3e 87       	std	Y+14, r19	; 0x0e
     71a:	4f 87       	std	Y+15, r20	; 0x0f
     71c:	58 8b       	std	Y+16, r21	; 0x10
     71e:	be 01       	movw	r22, r28
     720:	67 5f       	subi	r22, 0xF7	; 247
     722:	7f 4f       	sbci	r23, 0xFF	; 255
     724:	cb 01       	movw	r24, r22
     726:	0e 94 c9 03 	call	0x792	; 0x792 <__pack_f>
     72a:	68 96       	adiw	r28, 0x18	; 24
     72c:	ea e0       	ldi	r30, 0x0A	; 10
     72e:	0c 94 a1 0c 	jmp	0x1942	; 0x1942 <__epilogue_restores__+0x10>

00000732 <__eqsf2>:
     732:	a8 e1       	ldi	r26, 0x18	; 24
     734:	b0 e0       	ldi	r27, 0x00	; 0
     736:	ef e9       	ldi	r30, 0x9F	; 159
     738:	f3 e0       	ldi	r31, 0x03	; 3
     73a:	0c 94 89 0c 	jmp	0x1912	; 0x1912 <__prologue_saves__+0x18>
     73e:	69 83       	std	Y+1, r22	; 0x01
     740:	7a 83       	std	Y+2, r23	; 0x02
     742:	8b 83       	std	Y+3, r24	; 0x03
     744:	9c 83       	std	Y+4, r25	; 0x04
     746:	2d 83       	std	Y+5, r18	; 0x05
     748:	3e 83       	std	Y+6, r19	; 0x06
     74a:	4f 83       	std	Y+7, r20	; 0x07
     74c:	58 87       	std	Y+8, r21	; 0x08
     74e:	89 e0       	ldi	r24, 0x09	; 9
     750:	e8 2e       	mov	r14, r24
     752:	f1 2c       	mov	r15, r1
     754:	ec 0e       	add	r14, r28
     756:	fd 1e       	adc	r15, r29
     758:	ce 01       	movw	r24, r28
     75a:	01 96       	adiw	r24, 0x01	; 1
     75c:	b7 01       	movw	r22, r14
     75e:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     762:	8e 01       	movw	r16, r28
     764:	0f 5e       	subi	r16, 0xEF	; 239
     766:	1f 4f       	sbci	r17, 0xFF	; 255
     768:	ce 01       	movw	r24, r28
     76a:	05 96       	adiw	r24, 0x05	; 5
     76c:	b8 01       	movw	r22, r16
     76e:	0e 94 9e 04 	call	0x93c	; 0x93c <__unpack_f>
     772:	89 85       	ldd	r24, Y+9	; 0x09
     774:	82 30       	cpi	r24, 0x02	; 2
     776:	40 f0       	brcs	.+16     	; 0x788 <__eqsf2+0x56>
     778:	89 89       	ldd	r24, Y+17	; 0x11
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	28 f0       	brcs	.+10     	; 0x788 <__eqsf2+0x56>
     77e:	c7 01       	movw	r24, r14
     780:	b8 01       	movw	r22, r16
     782:	0e 94 16 05 	call	0xa2c	; 0xa2c <__fpcmp_parts_f>
     786:	01 c0       	rjmp	.+2      	; 0x78a <__eqsf2+0x58>
     788:	81 e0       	ldi	r24, 0x01	; 1
     78a:	68 96       	adiw	r28, 0x18	; 24
     78c:	e6 e0       	ldi	r30, 0x06	; 6
     78e:	0c 94 a5 0c 	jmp	0x194a	; 0x194a <__epilogue_restores__+0x18>

00000792 <__pack_f>:
     792:	df 92       	push	r13
     794:	ef 92       	push	r14
     796:	ff 92       	push	r15
     798:	0f 93       	push	r16
     79a:	1f 93       	push	r17
     79c:	fc 01       	movw	r30, r24
     79e:	e4 80       	ldd	r14, Z+4	; 0x04
     7a0:	f5 80       	ldd	r15, Z+5	; 0x05
     7a2:	06 81       	ldd	r16, Z+6	; 0x06
     7a4:	17 81       	ldd	r17, Z+7	; 0x07
     7a6:	d1 80       	ldd	r13, Z+1	; 0x01
     7a8:	80 81       	ld	r24, Z
     7aa:	82 30       	cpi	r24, 0x02	; 2
     7ac:	48 f4       	brcc	.+18     	; 0x7c0 <__pack_f+0x2e>
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	a0 e1       	ldi	r26, 0x10	; 16
     7b4:	b0 e0       	ldi	r27, 0x00	; 0
     7b6:	e8 2a       	or	r14, r24
     7b8:	f9 2a       	or	r15, r25
     7ba:	0a 2b       	or	r16, r26
     7bc:	1b 2b       	or	r17, r27
     7be:	a5 c0       	rjmp	.+330    	; 0x90a <__pack_f+0x178>
     7c0:	84 30       	cpi	r24, 0x04	; 4
     7c2:	09 f4       	brne	.+2      	; 0x7c6 <__pack_f+0x34>
     7c4:	9f c0       	rjmp	.+318    	; 0x904 <__pack_f+0x172>
     7c6:	82 30       	cpi	r24, 0x02	; 2
     7c8:	21 f4       	brne	.+8      	; 0x7d2 <__pack_f+0x40>
     7ca:	ee 24       	eor	r14, r14
     7cc:	ff 24       	eor	r15, r15
     7ce:	87 01       	movw	r16, r14
     7d0:	05 c0       	rjmp	.+10     	; 0x7dc <__pack_f+0x4a>
     7d2:	e1 14       	cp	r14, r1
     7d4:	f1 04       	cpc	r15, r1
     7d6:	01 05       	cpc	r16, r1
     7d8:	11 05       	cpc	r17, r1
     7da:	19 f4       	brne	.+6      	; 0x7e2 <__pack_f+0x50>
     7dc:	e0 e0       	ldi	r30, 0x00	; 0
     7de:	f0 e0       	ldi	r31, 0x00	; 0
     7e0:	96 c0       	rjmp	.+300    	; 0x90e <__pack_f+0x17c>
     7e2:	62 81       	ldd	r22, Z+2	; 0x02
     7e4:	73 81       	ldd	r23, Z+3	; 0x03
     7e6:	9f ef       	ldi	r25, 0xFF	; 255
     7e8:	62 38       	cpi	r22, 0x82	; 130
     7ea:	79 07       	cpc	r23, r25
     7ec:	0c f0       	brlt	.+2      	; 0x7f0 <__pack_f+0x5e>
     7ee:	5b c0       	rjmp	.+182    	; 0x8a6 <__pack_f+0x114>
     7f0:	22 e8       	ldi	r18, 0x82	; 130
     7f2:	3f ef       	ldi	r19, 0xFF	; 255
     7f4:	26 1b       	sub	r18, r22
     7f6:	37 0b       	sbc	r19, r23
     7f8:	2a 31       	cpi	r18, 0x1A	; 26
     7fa:	31 05       	cpc	r19, r1
     7fc:	2c f0       	brlt	.+10     	; 0x808 <__pack_f+0x76>
     7fe:	20 e0       	ldi	r18, 0x00	; 0
     800:	30 e0       	ldi	r19, 0x00	; 0
     802:	40 e0       	ldi	r20, 0x00	; 0
     804:	50 e0       	ldi	r21, 0x00	; 0
     806:	2a c0       	rjmp	.+84     	; 0x85c <__pack_f+0xca>
     808:	b8 01       	movw	r22, r16
     80a:	a7 01       	movw	r20, r14
     80c:	02 2e       	mov	r0, r18
     80e:	04 c0       	rjmp	.+8      	; 0x818 <__pack_f+0x86>
     810:	76 95       	lsr	r23
     812:	67 95       	ror	r22
     814:	57 95       	ror	r21
     816:	47 95       	ror	r20
     818:	0a 94       	dec	r0
     81a:	d2 f7       	brpl	.-12     	; 0x810 <__pack_f+0x7e>
     81c:	81 e0       	ldi	r24, 0x01	; 1
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	a0 e0       	ldi	r26, 0x00	; 0
     822:	b0 e0       	ldi	r27, 0x00	; 0
     824:	04 c0       	rjmp	.+8      	; 0x82e <__pack_f+0x9c>
     826:	88 0f       	add	r24, r24
     828:	99 1f       	adc	r25, r25
     82a:	aa 1f       	adc	r26, r26
     82c:	bb 1f       	adc	r27, r27
     82e:	2a 95       	dec	r18
     830:	d2 f7       	brpl	.-12     	; 0x826 <__pack_f+0x94>
     832:	01 97       	sbiw	r24, 0x01	; 1
     834:	a1 09       	sbc	r26, r1
     836:	b1 09       	sbc	r27, r1
     838:	8e 21       	and	r24, r14
     83a:	9f 21       	and	r25, r15
     83c:	a0 23       	and	r26, r16
     83e:	b1 23       	and	r27, r17
     840:	00 97       	sbiw	r24, 0x00	; 0
     842:	a1 05       	cpc	r26, r1
     844:	b1 05       	cpc	r27, r1
     846:	21 f0       	breq	.+8      	; 0x850 <__pack_f+0xbe>
     848:	81 e0       	ldi	r24, 0x01	; 1
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	a0 e0       	ldi	r26, 0x00	; 0
     84e:	b0 e0       	ldi	r27, 0x00	; 0
     850:	9a 01       	movw	r18, r20
     852:	ab 01       	movw	r20, r22
     854:	28 2b       	or	r18, r24
     856:	39 2b       	or	r19, r25
     858:	4a 2b       	or	r20, r26
     85a:	5b 2b       	or	r21, r27
     85c:	da 01       	movw	r26, r20
     85e:	c9 01       	movw	r24, r18
     860:	8f 77       	andi	r24, 0x7F	; 127
     862:	90 70       	andi	r25, 0x00	; 0
     864:	a0 70       	andi	r26, 0x00	; 0
     866:	b0 70       	andi	r27, 0x00	; 0
     868:	80 34       	cpi	r24, 0x40	; 64
     86a:	91 05       	cpc	r25, r1
     86c:	a1 05       	cpc	r26, r1
     86e:	b1 05       	cpc	r27, r1
     870:	39 f4       	brne	.+14     	; 0x880 <__pack_f+0xee>
     872:	27 ff       	sbrs	r18, 7
     874:	09 c0       	rjmp	.+18     	; 0x888 <__pack_f+0xf6>
     876:	20 5c       	subi	r18, 0xC0	; 192
     878:	3f 4f       	sbci	r19, 0xFF	; 255
     87a:	4f 4f       	sbci	r20, 0xFF	; 255
     87c:	5f 4f       	sbci	r21, 0xFF	; 255
     87e:	04 c0       	rjmp	.+8      	; 0x888 <__pack_f+0xf6>
     880:	21 5c       	subi	r18, 0xC1	; 193
     882:	3f 4f       	sbci	r19, 0xFF	; 255
     884:	4f 4f       	sbci	r20, 0xFF	; 255
     886:	5f 4f       	sbci	r21, 0xFF	; 255
     888:	e0 e0       	ldi	r30, 0x00	; 0
     88a:	f0 e0       	ldi	r31, 0x00	; 0
     88c:	20 30       	cpi	r18, 0x00	; 0
     88e:	a0 e0       	ldi	r26, 0x00	; 0
     890:	3a 07       	cpc	r19, r26
     892:	a0 e0       	ldi	r26, 0x00	; 0
     894:	4a 07       	cpc	r20, r26
     896:	a0 e4       	ldi	r26, 0x40	; 64
     898:	5a 07       	cpc	r21, r26
     89a:	10 f0       	brcs	.+4      	; 0x8a0 <__pack_f+0x10e>
     89c:	e1 e0       	ldi	r30, 0x01	; 1
     89e:	f0 e0       	ldi	r31, 0x00	; 0
     8a0:	79 01       	movw	r14, r18
     8a2:	8a 01       	movw	r16, r20
     8a4:	27 c0       	rjmp	.+78     	; 0x8f4 <__pack_f+0x162>
     8a6:	60 38       	cpi	r22, 0x80	; 128
     8a8:	71 05       	cpc	r23, r1
     8aa:	64 f5       	brge	.+88     	; 0x904 <__pack_f+0x172>
     8ac:	fb 01       	movw	r30, r22
     8ae:	e1 58       	subi	r30, 0x81	; 129
     8b0:	ff 4f       	sbci	r31, 0xFF	; 255
     8b2:	d8 01       	movw	r26, r16
     8b4:	c7 01       	movw	r24, r14
     8b6:	8f 77       	andi	r24, 0x7F	; 127
     8b8:	90 70       	andi	r25, 0x00	; 0
     8ba:	a0 70       	andi	r26, 0x00	; 0
     8bc:	b0 70       	andi	r27, 0x00	; 0
     8be:	80 34       	cpi	r24, 0x40	; 64
     8c0:	91 05       	cpc	r25, r1
     8c2:	a1 05       	cpc	r26, r1
     8c4:	b1 05       	cpc	r27, r1
     8c6:	39 f4       	brne	.+14     	; 0x8d6 <__pack_f+0x144>
     8c8:	e7 fe       	sbrs	r14, 7
     8ca:	0d c0       	rjmp	.+26     	; 0x8e6 <__pack_f+0x154>
     8cc:	80 e4       	ldi	r24, 0x40	; 64
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	a0 e0       	ldi	r26, 0x00	; 0
     8d2:	b0 e0       	ldi	r27, 0x00	; 0
     8d4:	04 c0       	rjmp	.+8      	; 0x8de <__pack_f+0x14c>
     8d6:	8f e3       	ldi	r24, 0x3F	; 63
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	a0 e0       	ldi	r26, 0x00	; 0
     8dc:	b0 e0       	ldi	r27, 0x00	; 0
     8de:	e8 0e       	add	r14, r24
     8e0:	f9 1e       	adc	r15, r25
     8e2:	0a 1f       	adc	r16, r26
     8e4:	1b 1f       	adc	r17, r27
     8e6:	17 ff       	sbrs	r17, 7
     8e8:	05 c0       	rjmp	.+10     	; 0x8f4 <__pack_f+0x162>
     8ea:	16 95       	lsr	r17
     8ec:	07 95       	ror	r16
     8ee:	f7 94       	ror	r15
     8f0:	e7 94       	ror	r14
     8f2:	31 96       	adiw	r30, 0x01	; 1
     8f4:	87 e0       	ldi	r24, 0x07	; 7
     8f6:	16 95       	lsr	r17
     8f8:	07 95       	ror	r16
     8fa:	f7 94       	ror	r15
     8fc:	e7 94       	ror	r14
     8fe:	8a 95       	dec	r24
     900:	d1 f7       	brne	.-12     	; 0x8f6 <__pack_f+0x164>
     902:	05 c0       	rjmp	.+10     	; 0x90e <__pack_f+0x17c>
     904:	ee 24       	eor	r14, r14
     906:	ff 24       	eor	r15, r15
     908:	87 01       	movw	r16, r14
     90a:	ef ef       	ldi	r30, 0xFF	; 255
     90c:	f0 e0       	ldi	r31, 0x00	; 0
     90e:	6e 2f       	mov	r22, r30
     910:	67 95       	ror	r22
     912:	66 27       	eor	r22, r22
     914:	67 95       	ror	r22
     916:	90 2f       	mov	r25, r16
     918:	9f 77       	andi	r25, 0x7F	; 127
     91a:	d7 94       	ror	r13
     91c:	dd 24       	eor	r13, r13
     91e:	d7 94       	ror	r13
     920:	8e 2f       	mov	r24, r30
     922:	86 95       	lsr	r24
     924:	49 2f       	mov	r20, r25
     926:	46 2b       	or	r20, r22
     928:	58 2f       	mov	r21, r24
     92a:	5d 29       	or	r21, r13
     92c:	b7 01       	movw	r22, r14
     92e:	ca 01       	movw	r24, r20
     930:	1f 91       	pop	r17
     932:	0f 91       	pop	r16
     934:	ff 90       	pop	r15
     936:	ef 90       	pop	r14
     938:	df 90       	pop	r13
     93a:	08 95       	ret

0000093c <__unpack_f>:
     93c:	fc 01       	movw	r30, r24
     93e:	db 01       	movw	r26, r22
     940:	40 81       	ld	r20, Z
     942:	51 81       	ldd	r21, Z+1	; 0x01
     944:	22 81       	ldd	r18, Z+2	; 0x02
     946:	62 2f       	mov	r22, r18
     948:	6f 77       	andi	r22, 0x7F	; 127
     94a:	70 e0       	ldi	r23, 0x00	; 0
     94c:	22 1f       	adc	r18, r18
     94e:	22 27       	eor	r18, r18
     950:	22 1f       	adc	r18, r18
     952:	93 81       	ldd	r25, Z+3	; 0x03
     954:	89 2f       	mov	r24, r25
     956:	88 0f       	add	r24, r24
     958:	82 2b       	or	r24, r18
     95a:	28 2f       	mov	r18, r24
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	99 1f       	adc	r25, r25
     960:	99 27       	eor	r25, r25
     962:	99 1f       	adc	r25, r25
     964:	11 96       	adiw	r26, 0x01	; 1
     966:	9c 93       	st	X, r25
     968:	11 97       	sbiw	r26, 0x01	; 1
     96a:	21 15       	cp	r18, r1
     96c:	31 05       	cpc	r19, r1
     96e:	a9 f5       	brne	.+106    	; 0x9da <__unpack_f+0x9e>
     970:	41 15       	cp	r20, r1
     972:	51 05       	cpc	r21, r1
     974:	61 05       	cpc	r22, r1
     976:	71 05       	cpc	r23, r1
     978:	11 f4       	brne	.+4      	; 0x97e <__unpack_f+0x42>
     97a:	82 e0       	ldi	r24, 0x02	; 2
     97c:	37 c0       	rjmp	.+110    	; 0x9ec <__unpack_f+0xb0>
     97e:	82 e8       	ldi	r24, 0x82	; 130
     980:	9f ef       	ldi	r25, 0xFF	; 255
     982:	13 96       	adiw	r26, 0x03	; 3
     984:	9c 93       	st	X, r25
     986:	8e 93       	st	-X, r24
     988:	12 97       	sbiw	r26, 0x02	; 2
     98a:	9a 01       	movw	r18, r20
     98c:	ab 01       	movw	r20, r22
     98e:	67 e0       	ldi	r22, 0x07	; 7
     990:	22 0f       	add	r18, r18
     992:	33 1f       	adc	r19, r19
     994:	44 1f       	adc	r20, r20
     996:	55 1f       	adc	r21, r21
     998:	6a 95       	dec	r22
     99a:	d1 f7       	brne	.-12     	; 0x990 <__unpack_f+0x54>
     99c:	83 e0       	ldi	r24, 0x03	; 3
     99e:	8c 93       	st	X, r24
     9a0:	0d c0       	rjmp	.+26     	; 0x9bc <__unpack_f+0x80>
     9a2:	22 0f       	add	r18, r18
     9a4:	33 1f       	adc	r19, r19
     9a6:	44 1f       	adc	r20, r20
     9a8:	55 1f       	adc	r21, r21
     9aa:	12 96       	adiw	r26, 0x02	; 2
     9ac:	8d 91       	ld	r24, X+
     9ae:	9c 91       	ld	r25, X
     9b0:	13 97       	sbiw	r26, 0x03	; 3
     9b2:	01 97       	sbiw	r24, 0x01	; 1
     9b4:	13 96       	adiw	r26, 0x03	; 3
     9b6:	9c 93       	st	X, r25
     9b8:	8e 93       	st	-X, r24
     9ba:	12 97       	sbiw	r26, 0x02	; 2
     9bc:	20 30       	cpi	r18, 0x00	; 0
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	38 07       	cpc	r19, r24
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	48 07       	cpc	r20, r24
     9c6:	80 e4       	ldi	r24, 0x40	; 64
     9c8:	58 07       	cpc	r21, r24
     9ca:	58 f3       	brcs	.-42     	; 0x9a2 <__unpack_f+0x66>
     9cc:	14 96       	adiw	r26, 0x04	; 4
     9ce:	2d 93       	st	X+, r18
     9d0:	3d 93       	st	X+, r19
     9d2:	4d 93       	st	X+, r20
     9d4:	5c 93       	st	X, r21
     9d6:	17 97       	sbiw	r26, 0x07	; 7
     9d8:	08 95       	ret
     9da:	2f 3f       	cpi	r18, 0xFF	; 255
     9dc:	31 05       	cpc	r19, r1
     9de:	79 f4       	brne	.+30     	; 0x9fe <__unpack_f+0xc2>
     9e0:	41 15       	cp	r20, r1
     9e2:	51 05       	cpc	r21, r1
     9e4:	61 05       	cpc	r22, r1
     9e6:	71 05       	cpc	r23, r1
     9e8:	19 f4       	brne	.+6      	; 0x9f0 <__unpack_f+0xb4>
     9ea:	84 e0       	ldi	r24, 0x04	; 4
     9ec:	8c 93       	st	X, r24
     9ee:	08 95       	ret
     9f0:	64 ff       	sbrs	r22, 4
     9f2:	03 c0       	rjmp	.+6      	; 0x9fa <__unpack_f+0xbe>
     9f4:	81 e0       	ldi	r24, 0x01	; 1
     9f6:	8c 93       	st	X, r24
     9f8:	12 c0       	rjmp	.+36     	; 0xa1e <__unpack_f+0xe2>
     9fa:	1c 92       	st	X, r1
     9fc:	10 c0       	rjmp	.+32     	; 0xa1e <__unpack_f+0xe2>
     9fe:	2f 57       	subi	r18, 0x7F	; 127
     a00:	30 40       	sbci	r19, 0x00	; 0
     a02:	13 96       	adiw	r26, 0x03	; 3
     a04:	3c 93       	st	X, r19
     a06:	2e 93       	st	-X, r18
     a08:	12 97       	sbiw	r26, 0x02	; 2
     a0a:	83 e0       	ldi	r24, 0x03	; 3
     a0c:	8c 93       	st	X, r24
     a0e:	87 e0       	ldi	r24, 0x07	; 7
     a10:	44 0f       	add	r20, r20
     a12:	55 1f       	adc	r21, r21
     a14:	66 1f       	adc	r22, r22
     a16:	77 1f       	adc	r23, r23
     a18:	8a 95       	dec	r24
     a1a:	d1 f7       	brne	.-12     	; 0xa10 <__unpack_f+0xd4>
     a1c:	70 64       	ori	r23, 0x40	; 64
     a1e:	14 96       	adiw	r26, 0x04	; 4
     a20:	4d 93       	st	X+, r20
     a22:	5d 93       	st	X+, r21
     a24:	6d 93       	st	X+, r22
     a26:	7c 93       	st	X, r23
     a28:	17 97       	sbiw	r26, 0x07	; 7
     a2a:	08 95       	ret

00000a2c <__fpcmp_parts_f>:
     a2c:	1f 93       	push	r17
     a2e:	dc 01       	movw	r26, r24
     a30:	fb 01       	movw	r30, r22
     a32:	9c 91       	ld	r25, X
     a34:	92 30       	cpi	r25, 0x02	; 2
     a36:	08 f4       	brcc	.+2      	; 0xa3a <__fpcmp_parts_f+0xe>
     a38:	47 c0       	rjmp	.+142    	; 0xac8 <__fpcmp_parts_f+0x9c>
     a3a:	80 81       	ld	r24, Z
     a3c:	82 30       	cpi	r24, 0x02	; 2
     a3e:	08 f4       	brcc	.+2      	; 0xa42 <__fpcmp_parts_f+0x16>
     a40:	43 c0       	rjmp	.+134    	; 0xac8 <__fpcmp_parts_f+0x9c>
     a42:	94 30       	cpi	r25, 0x04	; 4
     a44:	51 f4       	brne	.+20     	; 0xa5a <__fpcmp_parts_f+0x2e>
     a46:	11 96       	adiw	r26, 0x01	; 1
     a48:	1c 91       	ld	r17, X
     a4a:	84 30       	cpi	r24, 0x04	; 4
     a4c:	99 f5       	brne	.+102    	; 0xab4 <__fpcmp_parts_f+0x88>
     a4e:	81 81       	ldd	r24, Z+1	; 0x01
     a50:	68 2f       	mov	r22, r24
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	61 1b       	sub	r22, r17
     a56:	71 09       	sbc	r23, r1
     a58:	3f c0       	rjmp	.+126    	; 0xad8 <__fpcmp_parts_f+0xac>
     a5a:	84 30       	cpi	r24, 0x04	; 4
     a5c:	21 f0       	breq	.+8      	; 0xa66 <__fpcmp_parts_f+0x3a>
     a5e:	92 30       	cpi	r25, 0x02	; 2
     a60:	31 f4       	brne	.+12     	; 0xa6e <__fpcmp_parts_f+0x42>
     a62:	82 30       	cpi	r24, 0x02	; 2
     a64:	b9 f1       	breq	.+110    	; 0xad4 <__fpcmp_parts_f+0xa8>
     a66:	81 81       	ldd	r24, Z+1	; 0x01
     a68:	88 23       	and	r24, r24
     a6a:	89 f1       	breq	.+98     	; 0xace <__fpcmp_parts_f+0xa2>
     a6c:	2d c0       	rjmp	.+90     	; 0xac8 <__fpcmp_parts_f+0x9c>
     a6e:	11 96       	adiw	r26, 0x01	; 1
     a70:	1c 91       	ld	r17, X
     a72:	11 97       	sbiw	r26, 0x01	; 1
     a74:	82 30       	cpi	r24, 0x02	; 2
     a76:	f1 f0       	breq	.+60     	; 0xab4 <__fpcmp_parts_f+0x88>
     a78:	81 81       	ldd	r24, Z+1	; 0x01
     a7a:	18 17       	cp	r17, r24
     a7c:	d9 f4       	brne	.+54     	; 0xab4 <__fpcmp_parts_f+0x88>
     a7e:	12 96       	adiw	r26, 0x02	; 2
     a80:	2d 91       	ld	r18, X+
     a82:	3c 91       	ld	r19, X
     a84:	13 97       	sbiw	r26, 0x03	; 3
     a86:	82 81       	ldd	r24, Z+2	; 0x02
     a88:	93 81       	ldd	r25, Z+3	; 0x03
     a8a:	82 17       	cp	r24, r18
     a8c:	93 07       	cpc	r25, r19
     a8e:	94 f0       	brlt	.+36     	; 0xab4 <__fpcmp_parts_f+0x88>
     a90:	28 17       	cp	r18, r24
     a92:	39 07       	cpc	r19, r25
     a94:	bc f0       	brlt	.+46     	; 0xac4 <__fpcmp_parts_f+0x98>
     a96:	14 96       	adiw	r26, 0x04	; 4
     a98:	8d 91       	ld	r24, X+
     a9a:	9d 91       	ld	r25, X+
     a9c:	0d 90       	ld	r0, X+
     a9e:	bc 91       	ld	r27, X
     aa0:	a0 2d       	mov	r26, r0
     aa2:	24 81       	ldd	r18, Z+4	; 0x04
     aa4:	35 81       	ldd	r19, Z+5	; 0x05
     aa6:	46 81       	ldd	r20, Z+6	; 0x06
     aa8:	57 81       	ldd	r21, Z+7	; 0x07
     aaa:	28 17       	cp	r18, r24
     aac:	39 07       	cpc	r19, r25
     aae:	4a 07       	cpc	r20, r26
     ab0:	5b 07       	cpc	r21, r27
     ab2:	18 f4       	brcc	.+6      	; 0xaba <__fpcmp_parts_f+0x8e>
     ab4:	11 23       	and	r17, r17
     ab6:	41 f0       	breq	.+16     	; 0xac8 <__fpcmp_parts_f+0x9c>
     ab8:	0a c0       	rjmp	.+20     	; 0xace <__fpcmp_parts_f+0xa2>
     aba:	82 17       	cp	r24, r18
     abc:	93 07       	cpc	r25, r19
     abe:	a4 07       	cpc	r26, r20
     ac0:	b5 07       	cpc	r27, r21
     ac2:	40 f4       	brcc	.+16     	; 0xad4 <__fpcmp_parts_f+0xa8>
     ac4:	11 23       	and	r17, r17
     ac6:	19 f0       	breq	.+6      	; 0xace <__fpcmp_parts_f+0xa2>
     ac8:	61 e0       	ldi	r22, 0x01	; 1
     aca:	70 e0       	ldi	r23, 0x00	; 0
     acc:	05 c0       	rjmp	.+10     	; 0xad8 <__fpcmp_parts_f+0xac>
     ace:	6f ef       	ldi	r22, 0xFF	; 255
     ad0:	7f ef       	ldi	r23, 0xFF	; 255
     ad2:	02 c0       	rjmp	.+4      	; 0xad8 <__fpcmp_parts_f+0xac>
     ad4:	60 e0       	ldi	r22, 0x00	; 0
     ad6:	70 e0       	ldi	r23, 0x00	; 0
     ad8:	cb 01       	movw	r24, r22
     ada:	1f 91       	pop	r17
     adc:	08 95       	ret

00000ade <DIO_SetPinDirection>:
#include "../LIB/Bit_Math.h"
#include "DIO_register.h"
#include "DIO_interface.h"


uint8 DIO_SetPinDirection(uint8 Copy_Port, uint8 Copy_Pin, uint8 Copy_Direction){
     ade:	df 93       	push	r29
     ae0:	cf 93       	push	r28
     ae2:	cd b7       	in	r28, 0x3d	; 61
     ae4:	de b7       	in	r29, 0x3e	; 62
     ae6:	2a 97       	sbiw	r28, 0x0a	; 10
     ae8:	0f b6       	in	r0, 0x3f	; 63
     aea:	f8 94       	cli
     aec:	de bf       	out	0x3e, r29	; 62
     aee:	0f be       	out	0x3f, r0	; 63
     af0:	cd bf       	out	0x3d, r28	; 61
     af2:	8a 83       	std	Y+2, r24	; 0x02
     af4:	6b 83       	std	Y+3, r22	; 0x03
     af6:	4c 83       	std	Y+4, r20	; 0x04

	uint8 Local_ErrorState = 0;
     af8:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_Pin <= 7 && Copy_Pin >= 0){
     afa:	8b 81       	ldd	r24, Y+3	; 0x03
     afc:	88 30       	cpi	r24, 0x08	; 8
     afe:	08 f0       	brcs	.+2      	; 0xb02 <DIO_SetPinDirection+0x24>
     b00:	b9 c1       	rjmp	.+882    	; 0xe74 <DIO_SetPinDirection+0x396>

		if(Copy_Direction == INPUT_PIN)
     b02:	8c 81       	ldd	r24, Y+4	; 0x04
     b04:	88 23       	and	r24, r24
     b06:	09 f0       	breq	.+2      	; 0xb0a <DIO_SetPinDirection+0x2c>
     b08:	77 c0       	rjmp	.+238    	; 0xbf8 <DIO_SetPinDirection+0x11a>
		{
			switch(Copy_Port)
     b0a:	8a 81       	ldd	r24, Y+2	; 0x02
     b0c:	28 2f       	mov	r18, r24
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	3a 87       	std	Y+10, r19	; 0x0a
     b12:	29 87       	std	Y+9, r18	; 0x09
     b14:	89 85       	ldd	r24, Y+9	; 0x09
     b16:	9a 85       	ldd	r25, Y+10	; 0x0a
     b18:	81 30       	cpi	r24, 0x01	; 1
     b1a:	91 05       	cpc	r25, r1
     b1c:	59 f1       	breq	.+86     	; 0xb74 <DIO_SetPinDirection+0x96>
     b1e:	29 85       	ldd	r18, Y+9	; 0x09
     b20:	3a 85       	ldd	r19, Y+10	; 0x0a
     b22:	22 30       	cpi	r18, 0x02	; 2
     b24:	31 05       	cpc	r19, r1
     b26:	2c f4       	brge	.+10     	; 0xb32 <DIO_SetPinDirection+0x54>
     b28:	89 85       	ldd	r24, Y+9	; 0x09
     b2a:	9a 85       	ldd	r25, Y+10	; 0x0a
     b2c:	00 97       	sbiw	r24, 0x00	; 0
     b2e:	69 f0       	breq	.+26     	; 0xb4a <DIO_SetPinDirection+0x6c>
     b30:	60 c0       	rjmp	.+192    	; 0xbf2 <DIO_SetPinDirection+0x114>
     b32:	29 85       	ldd	r18, Y+9	; 0x09
     b34:	3a 85       	ldd	r19, Y+10	; 0x0a
     b36:	22 30       	cpi	r18, 0x02	; 2
     b38:	31 05       	cpc	r19, r1
     b3a:	89 f1       	breq	.+98     	; 0xb9e <DIO_SetPinDirection+0xc0>
     b3c:	89 85       	ldd	r24, Y+9	; 0x09
     b3e:	9a 85       	ldd	r25, Y+10	; 0x0a
     b40:	83 30       	cpi	r24, 0x03	; 3
     b42:	91 05       	cpc	r25, r1
     b44:	09 f4       	brne	.+2      	; 0xb48 <DIO_SetPinDirection+0x6a>
     b46:	40 c0       	rjmp	.+128    	; 0xbc8 <DIO_SetPinDirection+0xea>
     b48:	54 c0       	rjmp	.+168    	; 0xbf2 <DIO_SetPinDirection+0x114>
			{
			case PORT_A:   CLR_BIT(DDRA,Copy_Pin);  break;
     b4a:	aa e3       	ldi	r26, 0x3A	; 58
     b4c:	b0 e0       	ldi	r27, 0x00	; 0
     b4e:	ea e3       	ldi	r30, 0x3A	; 58
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	80 81       	ld	r24, Z
     b54:	48 2f       	mov	r20, r24
     b56:	8b 81       	ldd	r24, Y+3	; 0x03
     b58:	28 2f       	mov	r18, r24
     b5a:	30 e0       	ldi	r19, 0x00	; 0
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	02 2e       	mov	r0, r18
     b62:	02 c0       	rjmp	.+4      	; 0xb68 <DIO_SetPinDirection+0x8a>
     b64:	88 0f       	add	r24, r24
     b66:	99 1f       	adc	r25, r25
     b68:	0a 94       	dec	r0
     b6a:	e2 f7       	brpl	.-8      	; 0xb64 <DIO_SetPinDirection+0x86>
     b6c:	80 95       	com	r24
     b6e:	84 23       	and	r24, r20
     b70:	8c 93       	st	X, r24
     b72:	82 c1       	rjmp	.+772    	; 0xe78 <DIO_SetPinDirection+0x39a>
			case PORT_B:   CLR_BIT(DDRB,Copy_Pin);  break;
     b74:	a7 e3       	ldi	r26, 0x37	; 55
     b76:	b0 e0       	ldi	r27, 0x00	; 0
     b78:	e7 e3       	ldi	r30, 0x37	; 55
     b7a:	f0 e0       	ldi	r31, 0x00	; 0
     b7c:	80 81       	ld	r24, Z
     b7e:	48 2f       	mov	r20, r24
     b80:	8b 81       	ldd	r24, Y+3	; 0x03
     b82:	28 2f       	mov	r18, r24
     b84:	30 e0       	ldi	r19, 0x00	; 0
     b86:	81 e0       	ldi	r24, 0x01	; 1
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	02 2e       	mov	r0, r18
     b8c:	02 c0       	rjmp	.+4      	; 0xb92 <DIO_SetPinDirection+0xb4>
     b8e:	88 0f       	add	r24, r24
     b90:	99 1f       	adc	r25, r25
     b92:	0a 94       	dec	r0
     b94:	e2 f7       	brpl	.-8      	; 0xb8e <DIO_SetPinDirection+0xb0>
     b96:	80 95       	com	r24
     b98:	84 23       	and	r24, r20
     b9a:	8c 93       	st	X, r24
     b9c:	6d c1       	rjmp	.+730    	; 0xe78 <DIO_SetPinDirection+0x39a>
			case PORT_C:   CLR_BIT(DDRC,Copy_Pin);  break;
     b9e:	a4 e3       	ldi	r26, 0x34	; 52
     ba0:	b0 e0       	ldi	r27, 0x00	; 0
     ba2:	e4 e3       	ldi	r30, 0x34	; 52
     ba4:	f0 e0       	ldi	r31, 0x00	; 0
     ba6:	80 81       	ld	r24, Z
     ba8:	48 2f       	mov	r20, r24
     baa:	8b 81       	ldd	r24, Y+3	; 0x03
     bac:	28 2f       	mov	r18, r24
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	02 2e       	mov	r0, r18
     bb6:	02 c0       	rjmp	.+4      	; 0xbbc <DIO_SetPinDirection+0xde>
     bb8:	88 0f       	add	r24, r24
     bba:	99 1f       	adc	r25, r25
     bbc:	0a 94       	dec	r0
     bbe:	e2 f7       	brpl	.-8      	; 0xbb8 <DIO_SetPinDirection+0xda>
     bc0:	80 95       	com	r24
     bc2:	84 23       	and	r24, r20
     bc4:	8c 93       	st	X, r24
     bc6:	58 c1       	rjmp	.+688    	; 0xe78 <DIO_SetPinDirection+0x39a>
			case PORT_D:   CLR_BIT(DDRD,Copy_Pin);  break;
     bc8:	a1 e3       	ldi	r26, 0x31	; 49
     bca:	b0 e0       	ldi	r27, 0x00	; 0
     bcc:	e1 e3       	ldi	r30, 0x31	; 49
     bce:	f0 e0       	ldi	r31, 0x00	; 0
     bd0:	80 81       	ld	r24, Z
     bd2:	48 2f       	mov	r20, r24
     bd4:	8b 81       	ldd	r24, Y+3	; 0x03
     bd6:	28 2f       	mov	r18, r24
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	02 2e       	mov	r0, r18
     be0:	02 c0       	rjmp	.+4      	; 0xbe6 <DIO_SetPinDirection+0x108>
     be2:	88 0f       	add	r24, r24
     be4:	99 1f       	adc	r25, r25
     be6:	0a 94       	dec	r0
     be8:	e2 f7       	brpl	.-8      	; 0xbe2 <DIO_SetPinDirection+0x104>
     bea:	80 95       	com	r24
     bec:	84 23       	and	r24, r20
     bee:	8c 93       	st	X, r24
     bf0:	43 c1       	rjmp	.+646    	; 0xe78 <DIO_SetPinDirection+0x39a>
			default:	   Local_ErrorState = 1;    break;
     bf2:	81 e0       	ldi	r24, 0x01	; 1
     bf4:	89 83       	std	Y+1, r24	; 0x01
     bf6:	40 c1       	rjmp	.+640    	; 0xe78 <DIO_SetPinDirection+0x39a>
			}
		}

		else if(Copy_Direction == OUTPUT_PIN)
     bf8:	8c 81       	ldd	r24, Y+4	; 0x04
     bfa:	81 30       	cpi	r24, 0x01	; 1
     bfc:	09 f0       	breq	.+2      	; 0xc00 <DIO_SetPinDirection+0x122>
     bfe:	72 c0       	rjmp	.+228    	; 0xce4 <DIO_SetPinDirection+0x206>
		{
			switch(Copy_Port)
     c00:	8a 81       	ldd	r24, Y+2	; 0x02
     c02:	28 2f       	mov	r18, r24
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	38 87       	std	Y+8, r19	; 0x08
     c08:	2f 83       	std	Y+7, r18	; 0x07
     c0a:	8f 81       	ldd	r24, Y+7	; 0x07
     c0c:	98 85       	ldd	r25, Y+8	; 0x08
     c0e:	81 30       	cpi	r24, 0x01	; 1
     c10:	91 05       	cpc	r25, r1
     c12:	49 f1       	breq	.+82     	; 0xc66 <DIO_SetPinDirection+0x188>
     c14:	2f 81       	ldd	r18, Y+7	; 0x07
     c16:	38 85       	ldd	r19, Y+8	; 0x08
     c18:	22 30       	cpi	r18, 0x02	; 2
     c1a:	31 05       	cpc	r19, r1
     c1c:	2c f4       	brge	.+10     	; 0xc28 <DIO_SetPinDirection+0x14a>
     c1e:	8f 81       	ldd	r24, Y+7	; 0x07
     c20:	98 85       	ldd	r25, Y+8	; 0x08
     c22:	00 97       	sbiw	r24, 0x00	; 0
     c24:	61 f0       	breq	.+24     	; 0xc3e <DIO_SetPinDirection+0x160>
     c26:	5b c0       	rjmp	.+182    	; 0xcde <DIO_SetPinDirection+0x200>
     c28:	2f 81       	ldd	r18, Y+7	; 0x07
     c2a:	38 85       	ldd	r19, Y+8	; 0x08
     c2c:	22 30       	cpi	r18, 0x02	; 2
     c2e:	31 05       	cpc	r19, r1
     c30:	71 f1       	breq	.+92     	; 0xc8e <DIO_SetPinDirection+0x1b0>
     c32:	8f 81       	ldd	r24, Y+7	; 0x07
     c34:	98 85       	ldd	r25, Y+8	; 0x08
     c36:	83 30       	cpi	r24, 0x03	; 3
     c38:	91 05       	cpc	r25, r1
     c3a:	e9 f1       	breq	.+122    	; 0xcb6 <DIO_SetPinDirection+0x1d8>
     c3c:	50 c0       	rjmp	.+160    	; 0xcde <DIO_SetPinDirection+0x200>
			{
			case PORT_A:    SET_BIT(DDRA,Copy_Pin); break;
     c3e:	aa e3       	ldi	r26, 0x3A	; 58
     c40:	b0 e0       	ldi	r27, 0x00	; 0
     c42:	ea e3       	ldi	r30, 0x3A	; 58
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	80 81       	ld	r24, Z
     c48:	48 2f       	mov	r20, r24
     c4a:	8b 81       	ldd	r24, Y+3	; 0x03
     c4c:	28 2f       	mov	r18, r24
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	81 e0       	ldi	r24, 0x01	; 1
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	02 2e       	mov	r0, r18
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <DIO_SetPinDirection+0x17e>
     c58:	88 0f       	add	r24, r24
     c5a:	99 1f       	adc	r25, r25
     c5c:	0a 94       	dec	r0
     c5e:	e2 f7       	brpl	.-8      	; 0xc58 <DIO_SetPinDirection+0x17a>
     c60:	84 2b       	or	r24, r20
     c62:	8c 93       	st	X, r24
     c64:	09 c1       	rjmp	.+530    	; 0xe78 <DIO_SetPinDirection+0x39a>
			case PORT_B:    SET_BIT(DDRB,Copy_Pin); break;
     c66:	a7 e3       	ldi	r26, 0x37	; 55
     c68:	b0 e0       	ldi	r27, 0x00	; 0
     c6a:	e7 e3       	ldi	r30, 0x37	; 55
     c6c:	f0 e0       	ldi	r31, 0x00	; 0
     c6e:	80 81       	ld	r24, Z
     c70:	48 2f       	mov	r20, r24
     c72:	8b 81       	ldd	r24, Y+3	; 0x03
     c74:	28 2f       	mov	r18, r24
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	02 2e       	mov	r0, r18
     c7e:	02 c0       	rjmp	.+4      	; 0xc84 <DIO_SetPinDirection+0x1a6>
     c80:	88 0f       	add	r24, r24
     c82:	99 1f       	adc	r25, r25
     c84:	0a 94       	dec	r0
     c86:	e2 f7       	brpl	.-8      	; 0xc80 <DIO_SetPinDirection+0x1a2>
     c88:	84 2b       	or	r24, r20
     c8a:	8c 93       	st	X, r24
     c8c:	f5 c0       	rjmp	.+490    	; 0xe78 <DIO_SetPinDirection+0x39a>
			case PORT_C:    SET_BIT(DDRC,Copy_Pin); break;
     c8e:	a4 e3       	ldi	r26, 0x34	; 52
     c90:	b0 e0       	ldi	r27, 0x00	; 0
     c92:	e4 e3       	ldi	r30, 0x34	; 52
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	80 81       	ld	r24, Z
     c98:	48 2f       	mov	r20, r24
     c9a:	8b 81       	ldd	r24, Y+3	; 0x03
     c9c:	28 2f       	mov	r18, r24
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	02 2e       	mov	r0, r18
     ca6:	02 c0       	rjmp	.+4      	; 0xcac <DIO_SetPinDirection+0x1ce>
     ca8:	88 0f       	add	r24, r24
     caa:	99 1f       	adc	r25, r25
     cac:	0a 94       	dec	r0
     cae:	e2 f7       	brpl	.-8      	; 0xca8 <DIO_SetPinDirection+0x1ca>
     cb0:	84 2b       	or	r24, r20
     cb2:	8c 93       	st	X, r24
     cb4:	e1 c0       	rjmp	.+450    	; 0xe78 <DIO_SetPinDirection+0x39a>
			case PORT_D:    SET_BIT(DDRD,Copy_Pin); break;
     cb6:	a1 e3       	ldi	r26, 0x31	; 49
     cb8:	b0 e0       	ldi	r27, 0x00	; 0
     cba:	e1 e3       	ldi	r30, 0x31	; 49
     cbc:	f0 e0       	ldi	r31, 0x00	; 0
     cbe:	80 81       	ld	r24, Z
     cc0:	48 2f       	mov	r20, r24
     cc2:	8b 81       	ldd	r24, Y+3	; 0x03
     cc4:	28 2f       	mov	r18, r24
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	02 2e       	mov	r0, r18
     cce:	02 c0       	rjmp	.+4      	; 0xcd4 <DIO_SetPinDirection+0x1f6>
     cd0:	88 0f       	add	r24, r24
     cd2:	99 1f       	adc	r25, r25
     cd4:	0a 94       	dec	r0
     cd6:	e2 f7       	brpl	.-8      	; 0xcd0 <DIO_SetPinDirection+0x1f2>
     cd8:	84 2b       	or	r24, r20
     cda:	8c 93       	st	X, r24
     cdc:	cd c0       	rjmp	.+410    	; 0xe78 <DIO_SetPinDirection+0x39a>
			default:	   Local_ErrorState = 1;    break;
     cde:	81 e0       	ldi	r24, 0x01	; 1
     ce0:	89 83       	std	Y+1, r24	; 0x01
     ce2:	ca c0       	rjmp	.+404    	; 0xe78 <DIO_SetPinDirection+0x39a>
			}
		}

		else if(Copy_Direction == INPUT_PULLUP_PIN)
     ce4:	8c 81       	ldd	r24, Y+4	; 0x04
     ce6:	82 30       	cpi	r24, 0x02	; 2
     ce8:	09 f0       	breq	.+2      	; 0xcec <DIO_SetPinDirection+0x20e>
     cea:	c1 c0       	rjmp	.+386    	; 0xe6e <DIO_SetPinDirection+0x390>
		{
			switch(Copy_Port)
     cec:	8a 81       	ldd	r24, Y+2	; 0x02
     cee:	28 2f       	mov	r18, r24
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	3e 83       	std	Y+6, r19	; 0x06
     cf4:	2d 83       	std	Y+5, r18	; 0x05
     cf6:	8d 81       	ldd	r24, Y+5	; 0x05
     cf8:	9e 81       	ldd	r25, Y+6	; 0x06
     cfa:	81 30       	cpi	r24, 0x01	; 1
     cfc:	91 05       	cpc	r25, r1
     cfe:	09 f4       	brne	.+2      	; 0xd02 <DIO_SetPinDirection+0x224>
     d00:	3e c0       	rjmp	.+124    	; 0xd7e <DIO_SetPinDirection+0x2a0>
     d02:	2d 81       	ldd	r18, Y+5	; 0x05
     d04:	3e 81       	ldd	r19, Y+6	; 0x06
     d06:	22 30       	cpi	r18, 0x02	; 2
     d08:	31 05       	cpc	r19, r1
     d0a:	2c f4       	brge	.+10     	; 0xd16 <DIO_SetPinDirection+0x238>
     d0c:	8d 81       	ldd	r24, Y+5	; 0x05
     d0e:	9e 81       	ldd	r25, Y+6	; 0x06
     d10:	00 97       	sbiw	r24, 0x00	; 0
     d12:	71 f0       	breq	.+28     	; 0xd30 <DIO_SetPinDirection+0x252>
     d14:	a9 c0       	rjmp	.+338    	; 0xe68 <DIO_SetPinDirection+0x38a>
     d16:	2d 81       	ldd	r18, Y+5	; 0x05
     d18:	3e 81       	ldd	r19, Y+6	; 0x06
     d1a:	22 30       	cpi	r18, 0x02	; 2
     d1c:	31 05       	cpc	r19, r1
     d1e:	09 f4       	brne	.+2      	; 0xd22 <DIO_SetPinDirection+0x244>
     d20:	55 c0       	rjmp	.+170    	; 0xdcc <DIO_SetPinDirection+0x2ee>
     d22:	8d 81       	ldd	r24, Y+5	; 0x05
     d24:	9e 81       	ldd	r25, Y+6	; 0x06
     d26:	83 30       	cpi	r24, 0x03	; 3
     d28:	91 05       	cpc	r25, r1
     d2a:	09 f4       	brne	.+2      	; 0xd2e <DIO_SetPinDirection+0x250>
     d2c:	76 c0       	rjmp	.+236    	; 0xe1a <DIO_SetPinDirection+0x33c>
     d2e:	9c c0       	rjmp	.+312    	; 0xe68 <DIO_SetPinDirection+0x38a>
			{
			case PORT_A:
				CLR_BIT(DDRA,Copy_Pin);
     d30:	aa e3       	ldi	r26, 0x3A	; 58
     d32:	b0 e0       	ldi	r27, 0x00	; 0
     d34:	ea e3       	ldi	r30, 0x3A	; 58
     d36:	f0 e0       	ldi	r31, 0x00	; 0
     d38:	80 81       	ld	r24, Z
     d3a:	48 2f       	mov	r20, r24
     d3c:	8b 81       	ldd	r24, Y+3	; 0x03
     d3e:	28 2f       	mov	r18, r24
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	81 e0       	ldi	r24, 0x01	; 1
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <DIO_SetPinDirection+0x26e>
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	2a 95       	dec	r18
     d4e:	e2 f7       	brpl	.-8      	; 0xd48 <DIO_SetPinDirection+0x26a>
     d50:	80 95       	com	r24
     d52:	84 23       	and	r24, r20
     d54:	8c 93       	st	X, r24
				SET_BIT(PORTA,Copy_Pin);
     d56:	ab e3       	ldi	r26, 0x3B	; 59
     d58:	b0 e0       	ldi	r27, 0x00	; 0
     d5a:	eb e3       	ldi	r30, 0x3B	; 59
     d5c:	f0 e0       	ldi	r31, 0x00	; 0
     d5e:	80 81       	ld	r24, Z
     d60:	48 2f       	mov	r20, r24
     d62:	8b 81       	ldd	r24, Y+3	; 0x03
     d64:	28 2f       	mov	r18, r24
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	81 e0       	ldi	r24, 0x01	; 1
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	02 2e       	mov	r0, r18
     d6e:	02 c0       	rjmp	.+4      	; 0xd74 <DIO_SetPinDirection+0x296>
     d70:	88 0f       	add	r24, r24
     d72:	99 1f       	adc	r25, r25
     d74:	0a 94       	dec	r0
     d76:	e2 f7       	brpl	.-8      	; 0xd70 <DIO_SetPinDirection+0x292>
     d78:	84 2b       	or	r24, r20
     d7a:	8c 93       	st	X, r24
     d7c:	7d c0       	rjmp	.+250    	; 0xe78 <DIO_SetPinDirection+0x39a>
				break;
			case PORT_B:
				CLR_BIT(DDRB,Copy_Pin);
     d7e:	a7 e3       	ldi	r26, 0x37	; 55
     d80:	b0 e0       	ldi	r27, 0x00	; 0
     d82:	e7 e3       	ldi	r30, 0x37	; 55
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	80 81       	ld	r24, Z
     d88:	48 2f       	mov	r20, r24
     d8a:	8b 81       	ldd	r24, Y+3	; 0x03
     d8c:	28 2f       	mov	r18, r24
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	02 c0       	rjmp	.+4      	; 0xd9a <DIO_SetPinDirection+0x2bc>
     d96:	88 0f       	add	r24, r24
     d98:	99 1f       	adc	r25, r25
     d9a:	2a 95       	dec	r18
     d9c:	e2 f7       	brpl	.-8      	; 0xd96 <DIO_SetPinDirection+0x2b8>
     d9e:	80 95       	com	r24
     da0:	84 23       	and	r24, r20
     da2:	8c 93       	st	X, r24
				SET_BIT(PORTB,Copy_Pin);
     da4:	a8 e3       	ldi	r26, 0x38	; 56
     da6:	b0 e0       	ldi	r27, 0x00	; 0
     da8:	e8 e3       	ldi	r30, 0x38	; 56
     daa:	f0 e0       	ldi	r31, 0x00	; 0
     dac:	80 81       	ld	r24, Z
     dae:	48 2f       	mov	r20, r24
     db0:	8b 81       	ldd	r24, Y+3	; 0x03
     db2:	28 2f       	mov	r18, r24
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	02 2e       	mov	r0, r18
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <DIO_SetPinDirection+0x2e4>
     dbe:	88 0f       	add	r24, r24
     dc0:	99 1f       	adc	r25, r25
     dc2:	0a 94       	dec	r0
     dc4:	e2 f7       	brpl	.-8      	; 0xdbe <DIO_SetPinDirection+0x2e0>
     dc6:	84 2b       	or	r24, r20
     dc8:	8c 93       	st	X, r24
     dca:	56 c0       	rjmp	.+172    	; 0xe78 <DIO_SetPinDirection+0x39a>
				break;
			case PORT_C:
				CLR_BIT(DDRC,Copy_Pin);
     dcc:	a4 e3       	ldi	r26, 0x34	; 52
     dce:	b0 e0       	ldi	r27, 0x00	; 0
     dd0:	e4 e3       	ldi	r30, 0x34	; 52
     dd2:	f0 e0       	ldi	r31, 0x00	; 0
     dd4:	80 81       	ld	r24, Z
     dd6:	48 2f       	mov	r20, r24
     dd8:	8b 81       	ldd	r24, Y+3	; 0x03
     dda:	28 2f       	mov	r18, r24
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	02 c0       	rjmp	.+4      	; 0xde8 <DIO_SetPinDirection+0x30a>
     de4:	88 0f       	add	r24, r24
     de6:	99 1f       	adc	r25, r25
     de8:	2a 95       	dec	r18
     dea:	e2 f7       	brpl	.-8      	; 0xde4 <DIO_SetPinDirection+0x306>
     dec:	80 95       	com	r24
     dee:	84 23       	and	r24, r20
     df0:	8c 93       	st	X, r24
				SET_BIT(PORTC,Copy_Pin);
     df2:	a5 e3       	ldi	r26, 0x35	; 53
     df4:	b0 e0       	ldi	r27, 0x00	; 0
     df6:	e5 e3       	ldi	r30, 0x35	; 53
     df8:	f0 e0       	ldi	r31, 0x00	; 0
     dfa:	80 81       	ld	r24, Z
     dfc:	48 2f       	mov	r20, r24
     dfe:	8b 81       	ldd	r24, Y+3	; 0x03
     e00:	28 2f       	mov	r18, r24
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	81 e0       	ldi	r24, 0x01	; 1
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	02 2e       	mov	r0, r18
     e0a:	02 c0       	rjmp	.+4      	; 0xe10 <DIO_SetPinDirection+0x332>
     e0c:	88 0f       	add	r24, r24
     e0e:	99 1f       	adc	r25, r25
     e10:	0a 94       	dec	r0
     e12:	e2 f7       	brpl	.-8      	; 0xe0c <DIO_SetPinDirection+0x32e>
     e14:	84 2b       	or	r24, r20
     e16:	8c 93       	st	X, r24
     e18:	2f c0       	rjmp	.+94     	; 0xe78 <DIO_SetPinDirection+0x39a>
				break;
			case PORT_D:
				CLR_BIT(DDRD,Copy_Pin);
     e1a:	a1 e3       	ldi	r26, 0x31	; 49
     e1c:	b0 e0       	ldi	r27, 0x00	; 0
     e1e:	e1 e3       	ldi	r30, 0x31	; 49
     e20:	f0 e0       	ldi	r31, 0x00	; 0
     e22:	80 81       	ld	r24, Z
     e24:	48 2f       	mov	r20, r24
     e26:	8b 81       	ldd	r24, Y+3	; 0x03
     e28:	28 2f       	mov	r18, r24
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	81 e0       	ldi	r24, 0x01	; 1
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <DIO_SetPinDirection+0x358>
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	2a 95       	dec	r18
     e38:	e2 f7       	brpl	.-8      	; 0xe32 <DIO_SetPinDirection+0x354>
     e3a:	80 95       	com	r24
     e3c:	84 23       	and	r24, r20
     e3e:	8c 93       	st	X, r24
				SET_BIT(PORTD,Copy_Pin);
     e40:	a2 e3       	ldi	r26, 0x32	; 50
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	e2 e3       	ldi	r30, 0x32	; 50
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	48 2f       	mov	r20, r24
     e4c:	8b 81       	ldd	r24, Y+3	; 0x03
     e4e:	28 2f       	mov	r18, r24
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	81 e0       	ldi	r24, 0x01	; 1
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	02 2e       	mov	r0, r18
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <DIO_SetPinDirection+0x380>
     e5a:	88 0f       	add	r24, r24
     e5c:	99 1f       	adc	r25, r25
     e5e:	0a 94       	dec	r0
     e60:	e2 f7       	brpl	.-8      	; 0xe5a <DIO_SetPinDirection+0x37c>
     e62:	84 2b       	or	r24, r20
     e64:	8c 93       	st	X, r24
     e66:	08 c0       	rjmp	.+16     	; 0xe78 <DIO_SetPinDirection+0x39a>
				break;
			default:	   Local_ErrorState = 1;    break;
     e68:	81 e0       	ldi	r24, 0x01	; 1
     e6a:	89 83       	std	Y+1, r24	; 0x01
     e6c:	05 c0       	rjmp	.+10     	; 0xe78 <DIO_SetPinDirection+0x39a>
			}
		}
		else {
			Local_ErrorState = 1;
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	89 83       	std	Y+1, r24	; 0x01
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <DIO_SetPinDirection+0x39a>
		}
	}

	else {
		Local_ErrorState = 1;
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_ErrorState;
     e78:	89 81       	ldd	r24, Y+1	; 0x01
}
     e7a:	2a 96       	adiw	r28, 0x0a	; 10
     e7c:	0f b6       	in	r0, 0x3f	; 63
     e7e:	f8 94       	cli
     e80:	de bf       	out	0x3e, r29	; 62
     e82:	0f be       	out	0x3f, r0	; 63
     e84:	cd bf       	out	0x3d, r28	; 61
     e86:	cf 91       	pop	r28
     e88:	df 91       	pop	r29
     e8a:	08 95       	ret

00000e8c <DIO_SetPortDirection>:

/***************************************************************************/

uint8 DIO_SetPortDirection(uint8 Copy_Port, uint8 Copy_Direction){
     e8c:	df 93       	push	r29
     e8e:	cf 93       	push	r28
     e90:	00 d0       	rcall	.+0      	; 0xe92 <DIO_SetPortDirection+0x6>
     e92:	00 d0       	rcall	.+0      	; 0xe94 <DIO_SetPortDirection+0x8>
     e94:	0f 92       	push	r0
     e96:	cd b7       	in	r28, 0x3d	; 61
     e98:	de b7       	in	r29, 0x3e	; 62
     e9a:	8a 83       	std	Y+2, r24	; 0x02
     e9c:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_ErrorState = 0;
     e9e:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_Port){
     ea0:	8a 81       	ldd	r24, Y+2	; 0x02
     ea2:	28 2f       	mov	r18, r24
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	3d 83       	std	Y+5, r19	; 0x05
     ea8:	2c 83       	std	Y+4, r18	; 0x04
     eaa:	8c 81       	ldd	r24, Y+4	; 0x04
     eac:	9d 81       	ldd	r25, Y+5	; 0x05
     eae:	81 30       	cpi	r24, 0x01	; 1
     eb0:	91 05       	cpc	r25, r1
     eb2:	d1 f0       	breq	.+52     	; 0xee8 <DIO_SetPortDirection+0x5c>
     eb4:	2c 81       	ldd	r18, Y+4	; 0x04
     eb6:	3d 81       	ldd	r19, Y+5	; 0x05
     eb8:	22 30       	cpi	r18, 0x02	; 2
     eba:	31 05       	cpc	r19, r1
     ebc:	2c f4       	brge	.+10     	; 0xec8 <DIO_SetPortDirection+0x3c>
     ebe:	8c 81       	ldd	r24, Y+4	; 0x04
     ec0:	9d 81       	ldd	r25, Y+5	; 0x05
     ec2:	00 97       	sbiw	r24, 0x00	; 0
     ec4:	61 f0       	breq	.+24     	; 0xede <DIO_SetPortDirection+0x52>
     ec6:	1f c0       	rjmp	.+62     	; 0xf06 <DIO_SetPortDirection+0x7a>
     ec8:	2c 81       	ldd	r18, Y+4	; 0x04
     eca:	3d 81       	ldd	r19, Y+5	; 0x05
     ecc:	22 30       	cpi	r18, 0x02	; 2
     ece:	31 05       	cpc	r19, r1
     ed0:	81 f0       	breq	.+32     	; 0xef2 <DIO_SetPortDirection+0x66>
     ed2:	8c 81       	ldd	r24, Y+4	; 0x04
     ed4:	9d 81       	ldd	r25, Y+5	; 0x05
     ed6:	83 30       	cpi	r24, 0x03	; 3
     ed8:	91 05       	cpc	r25, r1
     eda:	81 f0       	breq	.+32     	; 0xefc <DIO_SetPortDirection+0x70>
     edc:	14 c0       	rjmp	.+40     	; 0xf06 <DIO_SetPortDirection+0x7a>
	case PORT_A:    DDRA = Copy_Direction; break;
     ede:	ea e3       	ldi	r30, 0x3A	; 58
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	8b 81       	ldd	r24, Y+3	; 0x03
     ee4:	80 83       	st	Z, r24
     ee6:	11 c0       	rjmp	.+34     	; 0xf0a <DIO_SetPortDirection+0x7e>
	case PORT_B:    DDRB = Copy_Direction; break;
     ee8:	e7 e3       	ldi	r30, 0x37	; 55
     eea:	f0 e0       	ldi	r31, 0x00	; 0
     eec:	8b 81       	ldd	r24, Y+3	; 0x03
     eee:	80 83       	st	Z, r24
     ef0:	0c c0       	rjmp	.+24     	; 0xf0a <DIO_SetPortDirection+0x7e>
	case PORT_C:    DDRC = Copy_Direction; break;
     ef2:	e4 e3       	ldi	r30, 0x34	; 52
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
     ef6:	8b 81       	ldd	r24, Y+3	; 0x03
     ef8:	80 83       	st	Z, r24
     efa:	07 c0       	rjmp	.+14     	; 0xf0a <DIO_SetPortDirection+0x7e>
	case PORT_D:    DDRD = Copy_Direction; break;
     efc:	e1 e3       	ldi	r30, 0x31	; 49
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	8b 81       	ldd	r24, Y+3	; 0x03
     f02:	80 83       	st	Z, r24
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <DIO_SetPortDirection+0x7e>
	default:	   Local_ErrorState = 1;   break;
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	89 83       	std	Y+1, r24	; 0x01

	}
	return Local_ErrorState;
     f0a:	89 81       	ldd	r24, Y+1	; 0x01
}
     f0c:	0f 90       	pop	r0
     f0e:	0f 90       	pop	r0
     f10:	0f 90       	pop	r0
     f12:	0f 90       	pop	r0
     f14:	0f 90       	pop	r0
     f16:	cf 91       	pop	r28
     f18:	df 91       	pop	r29
     f1a:	08 95       	ret

00000f1c <DIO_SetPinValue>:


/***************************************************************************/

uint8 DIO_SetPinValue(uint8 Copy_Port, uint8 Copy_Pin, uint8 Copy_Value){
     f1c:	df 93       	push	r29
     f1e:	cf 93       	push	r28
     f20:	cd b7       	in	r28, 0x3d	; 61
     f22:	de b7       	in	r29, 0x3e	; 62
     f24:	28 97       	sbiw	r28, 0x08	; 8
     f26:	0f b6       	in	r0, 0x3f	; 63
     f28:	f8 94       	cli
     f2a:	de bf       	out	0x3e, r29	; 62
     f2c:	0f be       	out	0x3f, r0	; 63
     f2e:	cd bf       	out	0x3d, r28	; 61
     f30:	8a 83       	std	Y+2, r24	; 0x02
     f32:	6b 83       	std	Y+3, r22	; 0x03
     f34:	4c 83       	std	Y+4, r20	; 0x04
	uint8 Local_ErrorState = 0;
     f36:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_Pin <= 7 && Copy_Pin >= 0){
     f38:	8b 81       	ldd	r24, Y+3	; 0x03
     f3a:	88 30       	cpi	r24, 0x08	; 8
     f3c:	08 f0       	brcs	.+2      	; 0xf40 <DIO_SetPinValue+0x24>
     f3e:	f1 c0       	rjmp	.+482    	; 0x1122 <DIO_SetPinValue+0x206>

		if(Copy_Value == PIN_LOW)
     f40:	8c 81       	ldd	r24, Y+4	; 0x04
     f42:	88 23       	and	r24, r24
     f44:	09 f0       	breq	.+2      	; 0xf48 <DIO_SetPinValue+0x2c>
     f46:	77 c0       	rjmp	.+238    	; 0x1036 <DIO_SetPinValue+0x11a>
		{
			switch(Copy_Port)
     f48:	8a 81       	ldd	r24, Y+2	; 0x02
     f4a:	28 2f       	mov	r18, r24
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	38 87       	std	Y+8, r19	; 0x08
     f50:	2f 83       	std	Y+7, r18	; 0x07
     f52:	8f 81       	ldd	r24, Y+7	; 0x07
     f54:	98 85       	ldd	r25, Y+8	; 0x08
     f56:	81 30       	cpi	r24, 0x01	; 1
     f58:	91 05       	cpc	r25, r1
     f5a:	59 f1       	breq	.+86     	; 0xfb2 <DIO_SetPinValue+0x96>
     f5c:	2f 81       	ldd	r18, Y+7	; 0x07
     f5e:	38 85       	ldd	r19, Y+8	; 0x08
     f60:	22 30       	cpi	r18, 0x02	; 2
     f62:	31 05       	cpc	r19, r1
     f64:	2c f4       	brge	.+10     	; 0xf70 <DIO_SetPinValue+0x54>
     f66:	8f 81       	ldd	r24, Y+7	; 0x07
     f68:	98 85       	ldd	r25, Y+8	; 0x08
     f6a:	00 97       	sbiw	r24, 0x00	; 0
     f6c:	69 f0       	breq	.+26     	; 0xf88 <DIO_SetPinValue+0x6c>
     f6e:	60 c0       	rjmp	.+192    	; 0x1030 <DIO_SetPinValue+0x114>
     f70:	2f 81       	ldd	r18, Y+7	; 0x07
     f72:	38 85       	ldd	r19, Y+8	; 0x08
     f74:	22 30       	cpi	r18, 0x02	; 2
     f76:	31 05       	cpc	r19, r1
     f78:	89 f1       	breq	.+98     	; 0xfdc <DIO_SetPinValue+0xc0>
     f7a:	8f 81       	ldd	r24, Y+7	; 0x07
     f7c:	98 85       	ldd	r25, Y+8	; 0x08
     f7e:	83 30       	cpi	r24, 0x03	; 3
     f80:	91 05       	cpc	r25, r1
     f82:	09 f4       	brne	.+2      	; 0xf86 <DIO_SetPinValue+0x6a>
     f84:	40 c0       	rjmp	.+128    	; 0x1006 <DIO_SetPinValue+0xea>
     f86:	54 c0       	rjmp	.+168    	; 0x1030 <DIO_SetPinValue+0x114>
			{
			case PORT_A:   CLR_BIT(PORTA,Copy_Pin);  break;
     f88:	ab e3       	ldi	r26, 0x3B	; 59
     f8a:	b0 e0       	ldi	r27, 0x00	; 0
     f8c:	eb e3       	ldi	r30, 0x3B	; 59
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	80 81       	ld	r24, Z
     f92:	48 2f       	mov	r20, r24
     f94:	8b 81       	ldd	r24, Y+3	; 0x03
     f96:	28 2f       	mov	r18, r24
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	81 e0       	ldi	r24, 0x01	; 1
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	02 2e       	mov	r0, r18
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <DIO_SetPinValue+0x8a>
     fa2:	88 0f       	add	r24, r24
     fa4:	99 1f       	adc	r25, r25
     fa6:	0a 94       	dec	r0
     fa8:	e2 f7       	brpl	.-8      	; 0xfa2 <DIO_SetPinValue+0x86>
     faa:	80 95       	com	r24
     fac:	84 23       	and	r24, r20
     fae:	8c 93       	st	X, r24
     fb0:	ba c0       	rjmp	.+372    	; 0x1126 <DIO_SetPinValue+0x20a>
			case PORT_B:   CLR_BIT(PORTB,Copy_Pin);  break;
     fb2:	a8 e3       	ldi	r26, 0x38	; 56
     fb4:	b0 e0       	ldi	r27, 0x00	; 0
     fb6:	e8 e3       	ldi	r30, 0x38	; 56
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	80 81       	ld	r24, Z
     fbc:	48 2f       	mov	r20, r24
     fbe:	8b 81       	ldd	r24, Y+3	; 0x03
     fc0:	28 2f       	mov	r18, r24
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	81 e0       	ldi	r24, 0x01	; 1
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	02 2e       	mov	r0, r18
     fca:	02 c0       	rjmp	.+4      	; 0xfd0 <DIO_SetPinValue+0xb4>
     fcc:	88 0f       	add	r24, r24
     fce:	99 1f       	adc	r25, r25
     fd0:	0a 94       	dec	r0
     fd2:	e2 f7       	brpl	.-8      	; 0xfcc <DIO_SetPinValue+0xb0>
     fd4:	80 95       	com	r24
     fd6:	84 23       	and	r24, r20
     fd8:	8c 93       	st	X, r24
     fda:	a5 c0       	rjmp	.+330    	; 0x1126 <DIO_SetPinValue+0x20a>
			case PORT_C:   CLR_BIT(PORTC,Copy_Pin);  break;
     fdc:	a5 e3       	ldi	r26, 0x35	; 53
     fde:	b0 e0       	ldi	r27, 0x00	; 0
     fe0:	e5 e3       	ldi	r30, 0x35	; 53
     fe2:	f0 e0       	ldi	r31, 0x00	; 0
     fe4:	80 81       	ld	r24, Z
     fe6:	48 2f       	mov	r20, r24
     fe8:	8b 81       	ldd	r24, Y+3	; 0x03
     fea:	28 2f       	mov	r18, r24
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	02 2e       	mov	r0, r18
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <DIO_SetPinValue+0xde>
     ff6:	88 0f       	add	r24, r24
     ff8:	99 1f       	adc	r25, r25
     ffa:	0a 94       	dec	r0
     ffc:	e2 f7       	brpl	.-8      	; 0xff6 <DIO_SetPinValue+0xda>
     ffe:	80 95       	com	r24
    1000:	84 23       	and	r24, r20
    1002:	8c 93       	st	X, r24
    1004:	90 c0       	rjmp	.+288    	; 0x1126 <DIO_SetPinValue+0x20a>
			case PORT_D:   CLR_BIT(PORTD,Copy_Pin);  break;
    1006:	a2 e3       	ldi	r26, 0x32	; 50
    1008:	b0 e0       	ldi	r27, 0x00	; 0
    100a:	e2 e3       	ldi	r30, 0x32	; 50
    100c:	f0 e0       	ldi	r31, 0x00	; 0
    100e:	80 81       	ld	r24, Z
    1010:	48 2f       	mov	r20, r24
    1012:	8b 81       	ldd	r24, Y+3	; 0x03
    1014:	28 2f       	mov	r18, r24
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	81 e0       	ldi	r24, 0x01	; 1
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	02 2e       	mov	r0, r18
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <DIO_SetPinValue+0x108>
    1020:	88 0f       	add	r24, r24
    1022:	99 1f       	adc	r25, r25
    1024:	0a 94       	dec	r0
    1026:	e2 f7       	brpl	.-8      	; 0x1020 <DIO_SetPinValue+0x104>
    1028:	80 95       	com	r24
    102a:	84 23       	and	r24, r20
    102c:	8c 93       	st	X, r24
    102e:	7b c0       	rjmp	.+246    	; 0x1126 <DIO_SetPinValue+0x20a>
			default:	   Local_ErrorState = 1;    break;
    1030:	81 e0       	ldi	r24, 0x01	; 1
    1032:	89 83       	std	Y+1, r24	; 0x01
    1034:	78 c0       	rjmp	.+240    	; 0x1126 <DIO_SetPinValue+0x20a>
			}
		}

		else if(Copy_Value == PIN_HIGH)
    1036:	8c 81       	ldd	r24, Y+4	; 0x04
    1038:	81 30       	cpi	r24, 0x01	; 1
    103a:	09 f0       	breq	.+2      	; 0x103e <DIO_SetPinValue+0x122>
    103c:	74 c0       	rjmp	.+232    	; 0x1126 <DIO_SetPinValue+0x20a>
		{
			switch(Copy_Port)
    103e:	8a 81       	ldd	r24, Y+2	; 0x02
    1040:	28 2f       	mov	r18, r24
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	3e 83       	std	Y+6, r19	; 0x06
    1046:	2d 83       	std	Y+5, r18	; 0x05
    1048:	8d 81       	ldd	r24, Y+5	; 0x05
    104a:	9e 81       	ldd	r25, Y+6	; 0x06
    104c:	81 30       	cpi	r24, 0x01	; 1
    104e:	91 05       	cpc	r25, r1
    1050:	49 f1       	breq	.+82     	; 0x10a4 <DIO_SetPinValue+0x188>
    1052:	2d 81       	ldd	r18, Y+5	; 0x05
    1054:	3e 81       	ldd	r19, Y+6	; 0x06
    1056:	22 30       	cpi	r18, 0x02	; 2
    1058:	31 05       	cpc	r19, r1
    105a:	2c f4       	brge	.+10     	; 0x1066 <DIO_SetPinValue+0x14a>
    105c:	8d 81       	ldd	r24, Y+5	; 0x05
    105e:	9e 81       	ldd	r25, Y+6	; 0x06
    1060:	00 97       	sbiw	r24, 0x00	; 0
    1062:	61 f0       	breq	.+24     	; 0x107c <DIO_SetPinValue+0x160>
    1064:	5b c0       	rjmp	.+182    	; 0x111c <DIO_SetPinValue+0x200>
    1066:	2d 81       	ldd	r18, Y+5	; 0x05
    1068:	3e 81       	ldd	r19, Y+6	; 0x06
    106a:	22 30       	cpi	r18, 0x02	; 2
    106c:	31 05       	cpc	r19, r1
    106e:	71 f1       	breq	.+92     	; 0x10cc <DIO_SetPinValue+0x1b0>
    1070:	8d 81       	ldd	r24, Y+5	; 0x05
    1072:	9e 81       	ldd	r25, Y+6	; 0x06
    1074:	83 30       	cpi	r24, 0x03	; 3
    1076:	91 05       	cpc	r25, r1
    1078:	e9 f1       	breq	.+122    	; 0x10f4 <DIO_SetPinValue+0x1d8>
    107a:	50 c0       	rjmp	.+160    	; 0x111c <DIO_SetPinValue+0x200>
			{
			case PORT_A:    SET_BIT(PORTA,Copy_Pin); break;
    107c:	ab e3       	ldi	r26, 0x3B	; 59
    107e:	b0 e0       	ldi	r27, 0x00	; 0
    1080:	eb e3       	ldi	r30, 0x3B	; 59
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	80 81       	ld	r24, Z
    1086:	48 2f       	mov	r20, r24
    1088:	8b 81       	ldd	r24, Y+3	; 0x03
    108a:	28 2f       	mov	r18, r24
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	81 e0       	ldi	r24, 0x01	; 1
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	02 2e       	mov	r0, r18
    1094:	02 c0       	rjmp	.+4      	; 0x109a <DIO_SetPinValue+0x17e>
    1096:	88 0f       	add	r24, r24
    1098:	99 1f       	adc	r25, r25
    109a:	0a 94       	dec	r0
    109c:	e2 f7       	brpl	.-8      	; 0x1096 <DIO_SetPinValue+0x17a>
    109e:	84 2b       	or	r24, r20
    10a0:	8c 93       	st	X, r24
    10a2:	41 c0       	rjmp	.+130    	; 0x1126 <DIO_SetPinValue+0x20a>
			case PORT_B:    SET_BIT(PORTB,Copy_Pin); break;
    10a4:	a8 e3       	ldi	r26, 0x38	; 56
    10a6:	b0 e0       	ldi	r27, 0x00	; 0
    10a8:	e8 e3       	ldi	r30, 0x38	; 56
    10aa:	f0 e0       	ldi	r31, 0x00	; 0
    10ac:	80 81       	ld	r24, Z
    10ae:	48 2f       	mov	r20, r24
    10b0:	8b 81       	ldd	r24, Y+3	; 0x03
    10b2:	28 2f       	mov	r18, r24
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	81 e0       	ldi	r24, 0x01	; 1
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	02 2e       	mov	r0, r18
    10bc:	02 c0       	rjmp	.+4      	; 0x10c2 <DIO_SetPinValue+0x1a6>
    10be:	88 0f       	add	r24, r24
    10c0:	99 1f       	adc	r25, r25
    10c2:	0a 94       	dec	r0
    10c4:	e2 f7       	brpl	.-8      	; 0x10be <DIO_SetPinValue+0x1a2>
    10c6:	84 2b       	or	r24, r20
    10c8:	8c 93       	st	X, r24
    10ca:	2d c0       	rjmp	.+90     	; 0x1126 <DIO_SetPinValue+0x20a>
			case PORT_C:    SET_BIT(PORTC,Copy_Pin); break;
    10cc:	a5 e3       	ldi	r26, 0x35	; 53
    10ce:	b0 e0       	ldi	r27, 0x00	; 0
    10d0:	e5 e3       	ldi	r30, 0x35	; 53
    10d2:	f0 e0       	ldi	r31, 0x00	; 0
    10d4:	80 81       	ld	r24, Z
    10d6:	48 2f       	mov	r20, r24
    10d8:	8b 81       	ldd	r24, Y+3	; 0x03
    10da:	28 2f       	mov	r18, r24
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	81 e0       	ldi	r24, 0x01	; 1
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	02 2e       	mov	r0, r18
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <DIO_SetPinValue+0x1ce>
    10e6:	88 0f       	add	r24, r24
    10e8:	99 1f       	adc	r25, r25
    10ea:	0a 94       	dec	r0
    10ec:	e2 f7       	brpl	.-8      	; 0x10e6 <DIO_SetPinValue+0x1ca>
    10ee:	84 2b       	or	r24, r20
    10f0:	8c 93       	st	X, r24
    10f2:	19 c0       	rjmp	.+50     	; 0x1126 <DIO_SetPinValue+0x20a>
			case PORT_D:    SET_BIT(PORTD,Copy_Pin); break;
    10f4:	a2 e3       	ldi	r26, 0x32	; 50
    10f6:	b0 e0       	ldi	r27, 0x00	; 0
    10f8:	e2 e3       	ldi	r30, 0x32	; 50
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	80 81       	ld	r24, Z
    10fe:	48 2f       	mov	r20, r24
    1100:	8b 81       	ldd	r24, Y+3	; 0x03
    1102:	28 2f       	mov	r18, r24
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	02 2e       	mov	r0, r18
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <DIO_SetPinValue+0x1f6>
    110e:	88 0f       	add	r24, r24
    1110:	99 1f       	adc	r25, r25
    1112:	0a 94       	dec	r0
    1114:	e2 f7       	brpl	.-8      	; 0x110e <DIO_SetPinValue+0x1f2>
    1116:	84 2b       	or	r24, r20
    1118:	8c 93       	st	X, r24
    111a:	05 c0       	rjmp	.+10     	; 0x1126 <DIO_SetPinValue+0x20a>
			default:	   Local_ErrorState = 1;    break;
    111c:	81 e0       	ldi	r24, 0x01	; 1
    111e:	89 83       	std	Y+1, r24	; 0x01
    1120:	02 c0       	rjmp	.+4      	; 0x1126 <DIO_SetPinValue+0x20a>
			}
		}
	}
	else {
		Local_ErrorState = 1;
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_ErrorState;
    1126:	89 81       	ldd	r24, Y+1	; 0x01
}
    1128:	28 96       	adiw	r28, 0x08	; 8
    112a:	0f b6       	in	r0, 0x3f	; 63
    112c:	f8 94       	cli
    112e:	de bf       	out	0x3e, r29	; 62
    1130:	0f be       	out	0x3f, r0	; 63
    1132:	cd bf       	out	0x3d, r28	; 61
    1134:	cf 91       	pop	r28
    1136:	df 91       	pop	r29
    1138:	08 95       	ret

0000113a <DIO_SetPortValue>:


/***************************************************************************/

uint8 DIO_SetPortValue(uint8 Copy_Port, uint8 Copy_Value){
    113a:	df 93       	push	r29
    113c:	cf 93       	push	r28
    113e:	00 d0       	rcall	.+0      	; 0x1140 <DIO_SetPortValue+0x6>
    1140:	00 d0       	rcall	.+0      	; 0x1142 <DIO_SetPortValue+0x8>
    1142:	0f 92       	push	r0
    1144:	cd b7       	in	r28, 0x3d	; 61
    1146:	de b7       	in	r29, 0x3e	; 62
    1148:	8a 83       	std	Y+2, r24	; 0x02
    114a:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_ErrorState = 0;
    114c:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_Port){
    114e:	8a 81       	ldd	r24, Y+2	; 0x02
    1150:	28 2f       	mov	r18, r24
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	3d 83       	std	Y+5, r19	; 0x05
    1156:	2c 83       	std	Y+4, r18	; 0x04
    1158:	8c 81       	ldd	r24, Y+4	; 0x04
    115a:	9d 81       	ldd	r25, Y+5	; 0x05
    115c:	81 30       	cpi	r24, 0x01	; 1
    115e:	91 05       	cpc	r25, r1
    1160:	d1 f0       	breq	.+52     	; 0x1196 <DIO_SetPortValue+0x5c>
    1162:	2c 81       	ldd	r18, Y+4	; 0x04
    1164:	3d 81       	ldd	r19, Y+5	; 0x05
    1166:	22 30       	cpi	r18, 0x02	; 2
    1168:	31 05       	cpc	r19, r1
    116a:	2c f4       	brge	.+10     	; 0x1176 <DIO_SetPortValue+0x3c>
    116c:	8c 81       	ldd	r24, Y+4	; 0x04
    116e:	9d 81       	ldd	r25, Y+5	; 0x05
    1170:	00 97       	sbiw	r24, 0x00	; 0
    1172:	61 f0       	breq	.+24     	; 0x118c <DIO_SetPortValue+0x52>
    1174:	1f c0       	rjmp	.+62     	; 0x11b4 <DIO_SetPortValue+0x7a>
    1176:	2c 81       	ldd	r18, Y+4	; 0x04
    1178:	3d 81       	ldd	r19, Y+5	; 0x05
    117a:	22 30       	cpi	r18, 0x02	; 2
    117c:	31 05       	cpc	r19, r1
    117e:	81 f0       	breq	.+32     	; 0x11a0 <DIO_SetPortValue+0x66>
    1180:	8c 81       	ldd	r24, Y+4	; 0x04
    1182:	9d 81       	ldd	r25, Y+5	; 0x05
    1184:	83 30       	cpi	r24, 0x03	; 3
    1186:	91 05       	cpc	r25, r1
    1188:	81 f0       	breq	.+32     	; 0x11aa <DIO_SetPortValue+0x70>
    118a:	14 c0       	rjmp	.+40     	; 0x11b4 <DIO_SetPortValue+0x7a>
	case PORT_A:    PORTA = Copy_Value; break;
    118c:	eb e3       	ldi	r30, 0x3B	; 59
    118e:	f0 e0       	ldi	r31, 0x00	; 0
    1190:	8b 81       	ldd	r24, Y+3	; 0x03
    1192:	80 83       	st	Z, r24
    1194:	11 c0       	rjmp	.+34     	; 0x11b8 <DIO_SetPortValue+0x7e>
	case PORT_B:    PORTB = Copy_Value; break;
    1196:	e8 e3       	ldi	r30, 0x38	; 56
    1198:	f0 e0       	ldi	r31, 0x00	; 0
    119a:	8b 81       	ldd	r24, Y+3	; 0x03
    119c:	80 83       	st	Z, r24
    119e:	0c c0       	rjmp	.+24     	; 0x11b8 <DIO_SetPortValue+0x7e>
	case PORT_C:    PORTC = Copy_Value; break;
    11a0:	e5 e3       	ldi	r30, 0x35	; 53
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	8b 81       	ldd	r24, Y+3	; 0x03
    11a6:	80 83       	st	Z, r24
    11a8:	07 c0       	rjmp	.+14     	; 0x11b8 <DIO_SetPortValue+0x7e>
	case PORT_D:    PORTD = Copy_Value; break;
    11aa:	e2 e3       	ldi	r30, 0x32	; 50
    11ac:	f0 e0       	ldi	r31, 0x00	; 0
    11ae:	8b 81       	ldd	r24, Y+3	; 0x03
    11b0:	80 83       	st	Z, r24
    11b2:	02 c0       	rjmp	.+4      	; 0x11b8 <DIO_SetPortValue+0x7e>
	default:	    Local_ErrorState = 1;   break;
    11b4:	81 e0       	ldi	r24, 0x01	; 1
    11b6:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_ErrorState;
    11b8:	89 81       	ldd	r24, Y+1	; 0x01
}
    11ba:	0f 90       	pop	r0
    11bc:	0f 90       	pop	r0
    11be:	0f 90       	pop	r0
    11c0:	0f 90       	pop	r0
    11c2:	0f 90       	pop	r0
    11c4:	cf 91       	pop	r28
    11c6:	df 91       	pop	r29
    11c8:	08 95       	ret

000011ca <DIO_GetPinValue>:

/***************************************************************************/

uint8 DIO_GetPinValue(uint8 Copy_Port, uint8 Copy_Pin, uint8* Return_PValue){
    11ca:	df 93       	push	r29
    11cc:	cf 93       	push	r28
    11ce:	cd b7       	in	r28, 0x3d	; 61
    11d0:	de b7       	in	r29, 0x3e	; 62
    11d2:	27 97       	sbiw	r28, 0x07	; 7
    11d4:	0f b6       	in	r0, 0x3f	; 63
    11d6:	f8 94       	cli
    11d8:	de bf       	out	0x3e, r29	; 62
    11da:	0f be       	out	0x3f, r0	; 63
    11dc:	cd bf       	out	0x3d, r28	; 61
    11de:	8a 83       	std	Y+2, r24	; 0x02
    11e0:	6b 83       	std	Y+3, r22	; 0x03
    11e2:	5d 83       	std	Y+5, r21	; 0x05
    11e4:	4c 83       	std	Y+4, r20	; 0x04
	uint8 Local_ErrorState = 0;
    11e6:	19 82       	std	Y+1, r1	; 0x01
	if((Return_PValue != NULL) && (Copy_Pin <= 7 && Copy_Pin >= 0)){
    11e8:	8c 81       	ldd	r24, Y+4	; 0x04
    11ea:	9d 81       	ldd	r25, Y+5	; 0x05
    11ec:	00 97       	sbiw	r24, 0x00	; 0
    11ee:	09 f4       	brne	.+2      	; 0x11f2 <DIO_GetPinValue+0x28>
    11f0:	a9 c0       	rjmp	.+338    	; 0x1344 <DIO_GetPinValue+0x17a>
    11f2:	8b 81       	ldd	r24, Y+3	; 0x03
    11f4:	88 30       	cpi	r24, 0x08	; 8
    11f6:	08 f0       	brcs	.+2      	; 0x11fa <DIO_GetPinValue+0x30>
    11f8:	a5 c0       	rjmp	.+330    	; 0x1344 <DIO_GetPinValue+0x17a>
		switch(Copy_Port){
    11fa:	8a 81       	ldd	r24, Y+2	; 0x02
    11fc:	28 2f       	mov	r18, r24
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	3f 83       	std	Y+7, r19	; 0x07
    1202:	2e 83       	std	Y+6, r18	; 0x06
    1204:	4e 81       	ldd	r20, Y+6	; 0x06
    1206:	5f 81       	ldd	r21, Y+7	; 0x07
    1208:	41 30       	cpi	r20, 0x01	; 1
    120a:	51 05       	cpc	r21, r1
    120c:	c1 f1       	breq	.+112    	; 0x127e <DIO_GetPinValue+0xb4>
    120e:	8e 81       	ldd	r24, Y+6	; 0x06
    1210:	9f 81       	ldd	r25, Y+7	; 0x07
    1212:	82 30       	cpi	r24, 0x02	; 2
    1214:	91 05       	cpc	r25, r1
    1216:	34 f4       	brge	.+12     	; 0x1224 <DIO_GetPinValue+0x5a>
    1218:	2e 81       	ldd	r18, Y+6	; 0x06
    121a:	3f 81       	ldd	r19, Y+7	; 0x07
    121c:	21 15       	cp	r18, r1
    121e:	31 05       	cpc	r19, r1
    1220:	71 f0       	breq	.+28     	; 0x123e <DIO_GetPinValue+0x74>
    1222:	8d c0       	rjmp	.+282    	; 0x133e <DIO_GetPinValue+0x174>
    1224:	4e 81       	ldd	r20, Y+6	; 0x06
    1226:	5f 81       	ldd	r21, Y+7	; 0x07
    1228:	42 30       	cpi	r20, 0x02	; 2
    122a:	51 05       	cpc	r21, r1
    122c:	09 f4       	brne	.+2      	; 0x1230 <DIO_GetPinValue+0x66>
    122e:	47 c0       	rjmp	.+142    	; 0x12be <DIO_GetPinValue+0xf4>
    1230:	8e 81       	ldd	r24, Y+6	; 0x06
    1232:	9f 81       	ldd	r25, Y+7	; 0x07
    1234:	83 30       	cpi	r24, 0x03	; 3
    1236:	91 05       	cpc	r25, r1
    1238:	09 f4       	brne	.+2      	; 0x123c <DIO_GetPinValue+0x72>
    123a:	61 c0       	rjmp	.+194    	; 0x12fe <DIO_GetPinValue+0x134>
    123c:	80 c0       	rjmp	.+256    	; 0x133e <DIO_GetPinValue+0x174>
		case PORT_A:    *Return_PValue = GET_BIT(PINA,Copy_Pin); break;
    123e:	e9 e3       	ldi	r30, 0x39	; 57
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	80 81       	ld	r24, Z
    1244:	48 2f       	mov	r20, r24
    1246:	50 e0       	ldi	r21, 0x00	; 0
    1248:	8b 81       	ldd	r24, Y+3	; 0x03
    124a:	28 2f       	mov	r18, r24
    124c:	30 e0       	ldi	r19, 0x00	; 0
    124e:	81 e0       	ldi	r24, 0x01	; 1
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <DIO_GetPinValue+0x8e>
    1254:	88 0f       	add	r24, r24
    1256:	99 1f       	adc	r25, r25
    1258:	2a 95       	dec	r18
    125a:	e2 f7       	brpl	.-8      	; 0x1254 <DIO_GetPinValue+0x8a>
    125c:	9a 01       	movw	r18, r20
    125e:	28 23       	and	r18, r24
    1260:	39 23       	and	r19, r25
    1262:	8b 81       	ldd	r24, Y+3	; 0x03
    1264:	88 2f       	mov	r24, r24
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	a9 01       	movw	r20, r18
    126a:	02 c0       	rjmp	.+4      	; 0x1270 <DIO_GetPinValue+0xa6>
    126c:	55 95       	asr	r21
    126e:	47 95       	ror	r20
    1270:	8a 95       	dec	r24
    1272:	e2 f7       	brpl	.-8      	; 0x126c <DIO_GetPinValue+0xa2>
    1274:	ca 01       	movw	r24, r20
    1276:	ec 81       	ldd	r30, Y+4	; 0x04
    1278:	fd 81       	ldd	r31, Y+5	; 0x05
    127a:	80 83       	st	Z, r24
    127c:	65 c0       	rjmp	.+202    	; 0x1348 <DIO_GetPinValue+0x17e>
		case PORT_B:    *Return_PValue = GET_BIT(PINB,Copy_Pin); break;
    127e:	e6 e3       	ldi	r30, 0x36	; 54
    1280:	f0 e0       	ldi	r31, 0x00	; 0
    1282:	80 81       	ld	r24, Z
    1284:	48 2f       	mov	r20, r24
    1286:	50 e0       	ldi	r21, 0x00	; 0
    1288:	8b 81       	ldd	r24, Y+3	; 0x03
    128a:	28 2f       	mov	r18, r24
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	81 e0       	ldi	r24, 0x01	; 1
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	02 c0       	rjmp	.+4      	; 0x1298 <DIO_GetPinValue+0xce>
    1294:	88 0f       	add	r24, r24
    1296:	99 1f       	adc	r25, r25
    1298:	2a 95       	dec	r18
    129a:	e2 f7       	brpl	.-8      	; 0x1294 <DIO_GetPinValue+0xca>
    129c:	9a 01       	movw	r18, r20
    129e:	28 23       	and	r18, r24
    12a0:	39 23       	and	r19, r25
    12a2:	8b 81       	ldd	r24, Y+3	; 0x03
    12a4:	88 2f       	mov	r24, r24
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	a9 01       	movw	r20, r18
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <DIO_GetPinValue+0xe6>
    12ac:	55 95       	asr	r21
    12ae:	47 95       	ror	r20
    12b0:	8a 95       	dec	r24
    12b2:	e2 f7       	brpl	.-8      	; 0x12ac <DIO_GetPinValue+0xe2>
    12b4:	ca 01       	movw	r24, r20
    12b6:	ec 81       	ldd	r30, Y+4	; 0x04
    12b8:	fd 81       	ldd	r31, Y+5	; 0x05
    12ba:	80 83       	st	Z, r24
    12bc:	45 c0       	rjmp	.+138    	; 0x1348 <DIO_GetPinValue+0x17e>
		case PORT_C:    *Return_PValue = GET_BIT(PINC,Copy_Pin); break;
    12be:	e3 e3       	ldi	r30, 0x33	; 51
    12c0:	f0 e0       	ldi	r31, 0x00	; 0
    12c2:	80 81       	ld	r24, Z
    12c4:	48 2f       	mov	r20, r24
    12c6:	50 e0       	ldi	r21, 0x00	; 0
    12c8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ca:	28 2f       	mov	r18, r24
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	02 c0       	rjmp	.+4      	; 0x12d8 <DIO_GetPinValue+0x10e>
    12d4:	88 0f       	add	r24, r24
    12d6:	99 1f       	adc	r25, r25
    12d8:	2a 95       	dec	r18
    12da:	e2 f7       	brpl	.-8      	; 0x12d4 <DIO_GetPinValue+0x10a>
    12dc:	9a 01       	movw	r18, r20
    12de:	28 23       	and	r18, r24
    12e0:	39 23       	and	r19, r25
    12e2:	8b 81       	ldd	r24, Y+3	; 0x03
    12e4:	88 2f       	mov	r24, r24
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	a9 01       	movw	r20, r18
    12ea:	02 c0       	rjmp	.+4      	; 0x12f0 <DIO_GetPinValue+0x126>
    12ec:	55 95       	asr	r21
    12ee:	47 95       	ror	r20
    12f0:	8a 95       	dec	r24
    12f2:	e2 f7       	brpl	.-8      	; 0x12ec <DIO_GetPinValue+0x122>
    12f4:	ca 01       	movw	r24, r20
    12f6:	ec 81       	ldd	r30, Y+4	; 0x04
    12f8:	fd 81       	ldd	r31, Y+5	; 0x05
    12fa:	80 83       	st	Z, r24
    12fc:	25 c0       	rjmp	.+74     	; 0x1348 <DIO_GetPinValue+0x17e>
		case PORT_D:    *Return_PValue = GET_BIT(PIND,Copy_Pin); break;
    12fe:	e0 e3       	ldi	r30, 0x30	; 48
    1300:	f0 e0       	ldi	r31, 0x00	; 0
    1302:	80 81       	ld	r24, Z
    1304:	48 2f       	mov	r20, r24
    1306:	50 e0       	ldi	r21, 0x00	; 0
    1308:	8b 81       	ldd	r24, Y+3	; 0x03
    130a:	28 2f       	mov	r18, r24
    130c:	30 e0       	ldi	r19, 0x00	; 0
    130e:	81 e0       	ldi	r24, 0x01	; 1
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <DIO_GetPinValue+0x14e>
    1314:	88 0f       	add	r24, r24
    1316:	99 1f       	adc	r25, r25
    1318:	2a 95       	dec	r18
    131a:	e2 f7       	brpl	.-8      	; 0x1314 <DIO_GetPinValue+0x14a>
    131c:	9a 01       	movw	r18, r20
    131e:	28 23       	and	r18, r24
    1320:	39 23       	and	r19, r25
    1322:	8b 81       	ldd	r24, Y+3	; 0x03
    1324:	88 2f       	mov	r24, r24
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	a9 01       	movw	r20, r18
    132a:	02 c0       	rjmp	.+4      	; 0x1330 <DIO_GetPinValue+0x166>
    132c:	55 95       	asr	r21
    132e:	47 95       	ror	r20
    1330:	8a 95       	dec	r24
    1332:	e2 f7       	brpl	.-8      	; 0x132c <DIO_GetPinValue+0x162>
    1334:	ca 01       	movw	r24, r20
    1336:	ec 81       	ldd	r30, Y+4	; 0x04
    1338:	fd 81       	ldd	r31, Y+5	; 0x05
    133a:	80 83       	st	Z, r24
    133c:	05 c0       	rjmp	.+10     	; 0x1348 <DIO_GetPinValue+0x17e>
		default:	    Local_ErrorState = 1;   break;
    133e:	81 e0       	ldi	r24, 0x01	; 1
    1340:	89 83       	std	Y+1, r24	; 0x01
    1342:	02 c0       	rjmp	.+4      	; 0x1348 <DIO_GetPinValue+0x17e>
		}
	}
	else {
		Local_ErrorState = 1;
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_ErrorState;
    1348:	89 81       	ldd	r24, Y+1	; 0x01
}
    134a:	27 96       	adiw	r28, 0x07	; 7
    134c:	0f b6       	in	r0, 0x3f	; 63
    134e:	f8 94       	cli
    1350:	de bf       	out	0x3e, r29	; 62
    1352:	0f be       	out	0x3f, r0	; 63
    1354:	cd bf       	out	0x3d, r28	; 61
    1356:	cf 91       	pop	r28
    1358:	df 91       	pop	r29
    135a:	08 95       	ret

0000135c <Timer0_Init>:
#include "Timer_interface.h"
#include "Timer_private.h"
#include "Timer_register.h"


void Timer0_Init(uint8 mode , uint8 clk){
    135c:	df 93       	push	r29
    135e:	cf 93       	push	r28
    1360:	00 d0       	rcall	.+0      	; 0x1362 <Timer0_Init+0x6>
    1362:	00 d0       	rcall	.+0      	; 0x1364 <Timer0_Init+0x8>
    1364:	cd b7       	in	r28, 0x3d	; 61
    1366:	de b7       	in	r29, 0x3e	; 62
    1368:	89 83       	std	Y+1, r24	; 0x01
    136a:	6a 83       	std	Y+2, r22	; 0x02
	switch(mode){
    136c:	89 81       	ldd	r24, Y+1	; 0x01
    136e:	28 2f       	mov	r18, r24
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	3c 83       	std	Y+4, r19	; 0x04
    1374:	2b 83       	std	Y+3, r18	; 0x03
    1376:	8b 81       	ldd	r24, Y+3	; 0x03
    1378:	9c 81       	ldd	r25, Y+4	; 0x04
    137a:	81 30       	cpi	r24, 0x01	; 1
    137c:	91 05       	cpc	r25, r1
    137e:	21 f1       	breq	.+72     	; 0x13c8 <Timer0_Init+0x6c>
    1380:	2b 81       	ldd	r18, Y+3	; 0x03
    1382:	3c 81       	ldd	r19, Y+4	; 0x04
    1384:	22 30       	cpi	r18, 0x02	; 2
    1386:	31 05       	cpc	r19, r1
    1388:	2c f4       	brge	.+10     	; 0x1394 <Timer0_Init+0x38>
    138a:	8b 81       	ldd	r24, Y+3	; 0x03
    138c:	9c 81       	ldd	r25, Y+4	; 0x04
    138e:	00 97       	sbiw	r24, 0x00	; 0
    1390:	61 f0       	breq	.+24     	; 0x13aa <Timer0_Init+0x4e>
    1392:	46 c0       	rjmp	.+140    	; 0x1420 <Timer0_Init+0xc4>
    1394:	2b 81       	ldd	r18, Y+3	; 0x03
    1396:	3c 81       	ldd	r19, Y+4	; 0x04
    1398:	22 30       	cpi	r18, 0x02	; 2
    139a:	31 05       	cpc	r19, r1
    139c:	21 f1       	breq	.+72     	; 0x13e6 <Timer0_Init+0x8a>
    139e:	8b 81       	ldd	r24, Y+3	; 0x03
    13a0:	9c 81       	ldd	r25, Y+4	; 0x04
    13a2:	83 30       	cpi	r24, 0x03	; 3
    13a4:	91 05       	cpc	r25, r1
    13a6:	71 f1       	breq	.+92     	; 0x1404 <Timer0_Init+0xa8>
    13a8:	3b c0       	rjmp	.+118    	; 0x1420 <Timer0_Init+0xc4>
	case Normal:
		/* Choose normal mode */
		CLR_BIT(TCCR0,TCCR0_WGM00);
    13aa:	a3 e5       	ldi	r26, 0x53	; 83
    13ac:	b0 e0       	ldi	r27, 0x00	; 0
    13ae:	e3 e5       	ldi	r30, 0x53	; 83
    13b0:	f0 e0       	ldi	r31, 0x00	; 0
    13b2:	80 81       	ld	r24, Z
    13b4:	8f 7b       	andi	r24, 0xBF	; 191
    13b6:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_WGM01);
    13b8:	a3 e5       	ldi	r26, 0x53	; 83
    13ba:	b0 e0       	ldi	r27, 0x00	; 0
    13bc:	e3 e5       	ldi	r30, 0x53	; 83
    13be:	f0 e0       	ldi	r31, 0x00	; 0
    13c0:	80 81       	ld	r24, Z
    13c2:	87 7f       	andi	r24, 0xF7	; 247
    13c4:	8c 93       	st	X, r24
    13c6:	2c c0       	rjmp	.+88     	; 0x1420 <Timer0_Init+0xc4>
		break;
	case PWM:
		//set PWM mode
		SET_BIT(TCCR0,TCCR0_WGM00);
    13c8:	a3 e5       	ldi	r26, 0x53	; 83
    13ca:	b0 e0       	ldi	r27, 0x00	; 0
    13cc:	e3 e5       	ldi	r30, 0x53	; 83
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	80 81       	ld	r24, Z
    13d2:	80 64       	ori	r24, 0x40	; 64
    13d4:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_WGM01);
    13d6:	a3 e5       	ldi	r26, 0x53	; 83
    13d8:	b0 e0       	ldi	r27, 0x00	; 0
    13da:	e3 e5       	ldi	r30, 0x53	; 83
    13dc:	f0 e0       	ldi	r31, 0x00	; 0
    13de:	80 81       	ld	r24, Z
    13e0:	87 7f       	andi	r24, 0xF7	; 247
    13e2:	8c 93       	st	X, r24
    13e4:	1d c0       	rjmp	.+58     	; 0x1420 <Timer0_Init+0xc4>
		break;
	case CTC:
		//set CTC mode
		CLR_BIT(TCCR0,TCCR0_WGM00);
    13e6:	a3 e5       	ldi	r26, 0x53	; 83
    13e8:	b0 e0       	ldi	r27, 0x00	; 0
    13ea:	e3 e5       	ldi	r30, 0x53	; 83
    13ec:	f0 e0       	ldi	r31, 0x00	; 0
    13ee:	80 81       	ld	r24, Z
    13f0:	8f 7b       	andi	r24, 0xBF	; 191
    13f2:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_WGM01);
    13f4:	a3 e5       	ldi	r26, 0x53	; 83
    13f6:	b0 e0       	ldi	r27, 0x00	; 0
    13f8:	e3 e5       	ldi	r30, 0x53	; 83
    13fa:	f0 e0       	ldi	r31, 0x00	; 0
    13fc:	80 81       	ld	r24, Z
    13fe:	88 60       	ori	r24, 0x08	; 8
    1400:	8c 93       	st	X, r24
    1402:	0e c0       	rjmp	.+28     	; 0x1420 <Timer0_Init+0xc4>
		break;
	case Fast_PWM:
		//set fast PWM mode
		SET_BIT(TCCR0,TCCR0_WGM00);
    1404:	a3 e5       	ldi	r26, 0x53	; 83
    1406:	b0 e0       	ldi	r27, 0x00	; 0
    1408:	e3 e5       	ldi	r30, 0x53	; 83
    140a:	f0 e0       	ldi	r31, 0x00	; 0
    140c:	80 81       	ld	r24, Z
    140e:	80 64       	ori	r24, 0x40	; 64
    1410:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_WGM01);
    1412:	a3 e5       	ldi	r26, 0x53	; 83
    1414:	b0 e0       	ldi	r27, 0x00	; 0
    1416:	e3 e5       	ldi	r30, 0x53	; 83
    1418:	f0 e0       	ldi	r31, 0x00	; 0
    141a:	80 81       	ld	r24, Z
    141c:	88 60       	ori	r24, 0x08	; 8
    141e:	8c 93       	st	X, r24
		break;
	}
	Timer0_ClkSelect(clk);
    1420:	8a 81       	ldd	r24, Y+2	; 0x02
    1422:	0e 94 1a 0a 	call	0x1434	; 0x1434 <Timer0_ClkSelect>
}
    1426:	0f 90       	pop	r0
    1428:	0f 90       	pop	r0
    142a:	0f 90       	pop	r0
    142c:	0f 90       	pop	r0
    142e:	cf 91       	pop	r28
    1430:	df 91       	pop	r29
    1432:	08 95       	ret

00001434 <Timer0_ClkSelect>:


void Timer0_ClkSelect(uint8 clk){
    1434:	df 93       	push	r29
    1436:	cf 93       	push	r28
    1438:	00 d0       	rcall	.+0      	; 0x143a <Timer0_ClkSelect+0x6>
    143a:	0f 92       	push	r0
    143c:	cd b7       	in	r28, 0x3d	; 61
    143e:	de b7       	in	r29, 0x3e	; 62
    1440:	89 83       	std	Y+1, r24	; 0x01
	switch(clk){
    1442:	89 81       	ldd	r24, Y+1	; 0x01
    1444:	28 2f       	mov	r18, r24
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	3b 83       	std	Y+3, r19	; 0x03
    144a:	2a 83       	std	Y+2, r18	; 0x02
    144c:	8a 81       	ldd	r24, Y+2	; 0x02
    144e:	9b 81       	ldd	r25, Y+3	; 0x03
    1450:	83 30       	cpi	r24, 0x03	; 3
    1452:	91 05       	cpc	r25, r1
    1454:	09 f4       	brne	.+2      	; 0x1458 <Timer0_ClkSelect+0x24>
    1456:	70 c0       	rjmp	.+224    	; 0x1538 <Timer0_ClkSelect+0x104>
    1458:	2a 81       	ldd	r18, Y+2	; 0x02
    145a:	3b 81       	ldd	r19, Y+3	; 0x03
    145c:	24 30       	cpi	r18, 0x04	; 4
    145e:	31 05       	cpc	r19, r1
    1460:	84 f4       	brge	.+32     	; 0x1482 <Timer0_ClkSelect+0x4e>
    1462:	8a 81       	ldd	r24, Y+2	; 0x02
    1464:	9b 81       	ldd	r25, Y+3	; 0x03
    1466:	81 30       	cpi	r24, 0x01	; 1
    1468:	91 05       	cpc	r25, r1
    146a:	d1 f1       	breq	.+116    	; 0x14e0 <Timer0_ClkSelect+0xac>
    146c:	2a 81       	ldd	r18, Y+2	; 0x02
    146e:	3b 81       	ldd	r19, Y+3	; 0x03
    1470:	22 30       	cpi	r18, 0x02	; 2
    1472:	31 05       	cpc	r19, r1
    1474:	0c f0       	brlt	.+2      	; 0x1478 <Timer0_ClkSelect+0x44>
    1476:	4a c0       	rjmp	.+148    	; 0x150c <Timer0_ClkSelect+0xd8>
    1478:	8a 81       	ldd	r24, Y+2	; 0x02
    147a:	9b 81       	ldd	r25, Y+3	; 0x03
    147c:	00 97       	sbiw	r24, 0x00	; 0
    147e:	d1 f0       	breq	.+52     	; 0x14b4 <Timer0_ClkSelect+0x80>
    1480:	c8 c0       	rjmp	.+400    	; 0x1612 <Timer0_ClkSelect+0x1de>
    1482:	2a 81       	ldd	r18, Y+2	; 0x02
    1484:	3b 81       	ldd	r19, Y+3	; 0x03
    1486:	25 30       	cpi	r18, 0x05	; 5
    1488:	31 05       	cpc	r19, r1
    148a:	09 f4       	brne	.+2      	; 0x148e <Timer0_ClkSelect+0x5a>
    148c:	81 c0       	rjmp	.+258    	; 0x1590 <Timer0_ClkSelect+0x15c>
    148e:	8a 81       	ldd	r24, Y+2	; 0x02
    1490:	9b 81       	ldd	r25, Y+3	; 0x03
    1492:	85 30       	cpi	r24, 0x05	; 5
    1494:	91 05       	cpc	r25, r1
    1496:	0c f4       	brge	.+2      	; 0x149a <Timer0_ClkSelect+0x66>
    1498:	65 c0       	rjmp	.+202    	; 0x1564 <Timer0_ClkSelect+0x130>
    149a:	2a 81       	ldd	r18, Y+2	; 0x02
    149c:	3b 81       	ldd	r19, Y+3	; 0x03
    149e:	26 30       	cpi	r18, 0x06	; 6
    14a0:	31 05       	cpc	r19, r1
    14a2:	09 f4       	brne	.+2      	; 0x14a6 <Timer0_ClkSelect+0x72>
    14a4:	8b c0       	rjmp	.+278    	; 0x15bc <Timer0_ClkSelect+0x188>
    14a6:	8a 81       	ldd	r24, Y+2	; 0x02
    14a8:	9b 81       	ldd	r25, Y+3	; 0x03
    14aa:	87 30       	cpi	r24, 0x07	; 7
    14ac:	91 05       	cpc	r25, r1
    14ae:	09 f4       	brne	.+2      	; 0x14b2 <Timer0_ClkSelect+0x7e>
    14b0:	9b c0       	rjmp	.+310    	; 0x15e8 <Timer0_ClkSelect+0x1b4>
    14b2:	af c0       	rjmp	.+350    	; 0x1612 <Timer0_ClkSelect+0x1de>
	case NO_SOURCE:
		CLR_BIT(TCCR0,TCCR0_CS00);
    14b4:	a3 e5       	ldi	r26, 0x53	; 83
    14b6:	b0 e0       	ldi	r27, 0x00	; 0
    14b8:	e3 e5       	ldi	r30, 0x53	; 83
    14ba:	f0 e0       	ldi	r31, 0x00	; 0
    14bc:	80 81       	ld	r24, Z
    14be:	8e 7f       	andi	r24, 0xFE	; 254
    14c0:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_CS01);
    14c2:	a3 e5       	ldi	r26, 0x53	; 83
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	e3 e5       	ldi	r30, 0x53	; 83
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	80 81       	ld	r24, Z
    14cc:	8d 7f       	andi	r24, 0xFD	; 253
    14ce:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_CS02);
    14d0:	a3 e5       	ldi	r26, 0x53	; 83
    14d2:	b0 e0       	ldi	r27, 0x00	; 0
    14d4:	e3 e5       	ldi	r30, 0x53	; 83
    14d6:	f0 e0       	ldi	r31, 0x00	; 0
    14d8:	80 81       	ld	r24, Z
    14da:	8b 7f       	andi	r24, 0xFB	; 251
    14dc:	8c 93       	st	X, r24
    14de:	99 c0       	rjmp	.+306    	; 0x1612 <Timer0_ClkSelect+0x1de>
		break;
	case NO_PRE:
		SET_BIT(TCCR0,TCCR0_CS00);
    14e0:	a3 e5       	ldi	r26, 0x53	; 83
    14e2:	b0 e0       	ldi	r27, 0x00	; 0
    14e4:	e3 e5       	ldi	r30, 0x53	; 83
    14e6:	f0 e0       	ldi	r31, 0x00	; 0
    14e8:	80 81       	ld	r24, Z
    14ea:	81 60       	ori	r24, 0x01	; 1
    14ec:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_CS01);
    14ee:	a3 e5       	ldi	r26, 0x53	; 83
    14f0:	b0 e0       	ldi	r27, 0x00	; 0
    14f2:	e3 e5       	ldi	r30, 0x53	; 83
    14f4:	f0 e0       	ldi	r31, 0x00	; 0
    14f6:	80 81       	ld	r24, Z
    14f8:	8d 7f       	andi	r24, 0xFD	; 253
    14fa:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_CS02);
    14fc:	a3 e5       	ldi	r26, 0x53	; 83
    14fe:	b0 e0       	ldi	r27, 0x00	; 0
    1500:	e3 e5       	ldi	r30, 0x53	; 83
    1502:	f0 e0       	ldi	r31, 0x00	; 0
    1504:	80 81       	ld	r24, Z
    1506:	8b 7f       	andi	r24, 0xFB	; 251
    1508:	8c 93       	st	X, r24
    150a:	83 c0       	rjmp	.+262    	; 0x1612 <Timer0_ClkSelect+0x1de>
		break;
	case PRE8:
		//set 8 prescalar
		CLR_BIT(TCCR0,TCCR0_CS00);
    150c:	a3 e5       	ldi	r26, 0x53	; 83
    150e:	b0 e0       	ldi	r27, 0x00	; 0
    1510:	e3 e5       	ldi	r30, 0x53	; 83
    1512:	f0 e0       	ldi	r31, 0x00	; 0
    1514:	80 81       	ld	r24, Z
    1516:	8e 7f       	andi	r24, 0xFE	; 254
    1518:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_CS01);
    151a:	a3 e5       	ldi	r26, 0x53	; 83
    151c:	b0 e0       	ldi	r27, 0x00	; 0
    151e:	e3 e5       	ldi	r30, 0x53	; 83
    1520:	f0 e0       	ldi	r31, 0x00	; 0
    1522:	80 81       	ld	r24, Z
    1524:	82 60       	ori	r24, 0x02	; 2
    1526:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_CS02);
    1528:	a3 e5       	ldi	r26, 0x53	; 83
    152a:	b0 e0       	ldi	r27, 0x00	; 0
    152c:	e3 e5       	ldi	r30, 0x53	; 83
    152e:	f0 e0       	ldi	r31, 0x00	; 0
    1530:	80 81       	ld	r24, Z
    1532:	8b 7f       	andi	r24, 0xFB	; 251
    1534:	8c 93       	st	X, r24
    1536:	6d c0       	rjmp	.+218    	; 0x1612 <Timer0_ClkSelect+0x1de>
		break;
	case PRE64:
		//set 64 prescalar
		SET_BIT(TCCR0,TCCR0_CS00);
    1538:	a3 e5       	ldi	r26, 0x53	; 83
    153a:	b0 e0       	ldi	r27, 0x00	; 0
    153c:	e3 e5       	ldi	r30, 0x53	; 83
    153e:	f0 e0       	ldi	r31, 0x00	; 0
    1540:	80 81       	ld	r24, Z
    1542:	81 60       	ori	r24, 0x01	; 1
    1544:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_CS01);
    1546:	a3 e5       	ldi	r26, 0x53	; 83
    1548:	b0 e0       	ldi	r27, 0x00	; 0
    154a:	e3 e5       	ldi	r30, 0x53	; 83
    154c:	f0 e0       	ldi	r31, 0x00	; 0
    154e:	80 81       	ld	r24, Z
    1550:	82 60       	ori	r24, 0x02	; 2
    1552:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_CS02);
    1554:	a3 e5       	ldi	r26, 0x53	; 83
    1556:	b0 e0       	ldi	r27, 0x00	; 0
    1558:	e3 e5       	ldi	r30, 0x53	; 83
    155a:	f0 e0       	ldi	r31, 0x00	; 0
    155c:	80 81       	ld	r24, Z
    155e:	8b 7f       	andi	r24, 0xFB	; 251
    1560:	8c 93       	st	X, r24
    1562:	57 c0       	rjmp	.+174    	; 0x1612 <Timer0_ClkSelect+0x1de>
		break;
	case PRE256:
		//set 256 prescalar
		CLR_BIT(TCCR0,TCCR0_CS00);
    1564:	a3 e5       	ldi	r26, 0x53	; 83
    1566:	b0 e0       	ldi	r27, 0x00	; 0
    1568:	e3 e5       	ldi	r30, 0x53	; 83
    156a:	f0 e0       	ldi	r31, 0x00	; 0
    156c:	80 81       	ld	r24, Z
    156e:	8e 7f       	andi	r24, 0xFE	; 254
    1570:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_CS01);
    1572:	a3 e5       	ldi	r26, 0x53	; 83
    1574:	b0 e0       	ldi	r27, 0x00	; 0
    1576:	e3 e5       	ldi	r30, 0x53	; 83
    1578:	f0 e0       	ldi	r31, 0x00	; 0
    157a:	80 81       	ld	r24, Z
    157c:	8d 7f       	andi	r24, 0xFD	; 253
    157e:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_CS02);
    1580:	a3 e5       	ldi	r26, 0x53	; 83
    1582:	b0 e0       	ldi	r27, 0x00	; 0
    1584:	e3 e5       	ldi	r30, 0x53	; 83
    1586:	f0 e0       	ldi	r31, 0x00	; 0
    1588:	80 81       	ld	r24, Z
    158a:	84 60       	ori	r24, 0x04	; 4
    158c:	8c 93       	st	X, r24
    158e:	41 c0       	rjmp	.+130    	; 0x1612 <Timer0_ClkSelect+0x1de>
		break;
	case PRE1024:
		//set 1024 prescalar
		SET_BIT(TCCR0,TCCR0_CS00);
    1590:	a3 e5       	ldi	r26, 0x53	; 83
    1592:	b0 e0       	ldi	r27, 0x00	; 0
    1594:	e3 e5       	ldi	r30, 0x53	; 83
    1596:	f0 e0       	ldi	r31, 0x00	; 0
    1598:	80 81       	ld	r24, Z
    159a:	81 60       	ori	r24, 0x01	; 1
    159c:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,TCCR0_CS01);
    159e:	a3 e5       	ldi	r26, 0x53	; 83
    15a0:	b0 e0       	ldi	r27, 0x00	; 0
    15a2:	e3 e5       	ldi	r30, 0x53	; 83
    15a4:	f0 e0       	ldi	r31, 0x00	; 0
    15a6:	80 81       	ld	r24, Z
    15a8:	8d 7f       	andi	r24, 0xFD	; 253
    15aa:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_CS02);
    15ac:	a3 e5       	ldi	r26, 0x53	; 83
    15ae:	b0 e0       	ldi	r27, 0x00	; 0
    15b0:	e3 e5       	ldi	r30, 0x53	; 83
    15b2:	f0 e0       	ldi	r31, 0x00	; 0
    15b4:	80 81       	ld	r24, Z
    15b6:	84 60       	ori	r24, 0x04	; 4
    15b8:	8c 93       	st	X, r24
    15ba:	2b c0       	rjmp	.+86     	; 0x1612 <Timer0_ClkSelect+0x1de>
		break;
	case EX_FALLING:
		//set falling edge mode
		CLR_BIT(TCCR0,TCCR0_CS00);
    15bc:	a3 e5       	ldi	r26, 0x53	; 83
    15be:	b0 e0       	ldi	r27, 0x00	; 0
    15c0:	e3 e5       	ldi	r30, 0x53	; 83
    15c2:	f0 e0       	ldi	r31, 0x00	; 0
    15c4:	80 81       	ld	r24, Z
    15c6:	8e 7f       	andi	r24, 0xFE	; 254
    15c8:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_CS01);
    15ca:	a3 e5       	ldi	r26, 0x53	; 83
    15cc:	b0 e0       	ldi	r27, 0x00	; 0
    15ce:	e3 e5       	ldi	r30, 0x53	; 83
    15d0:	f0 e0       	ldi	r31, 0x00	; 0
    15d2:	80 81       	ld	r24, Z
    15d4:	82 60       	ori	r24, 0x02	; 2
    15d6:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_CS02);
    15d8:	a3 e5       	ldi	r26, 0x53	; 83
    15da:	b0 e0       	ldi	r27, 0x00	; 0
    15dc:	e3 e5       	ldi	r30, 0x53	; 83
    15de:	f0 e0       	ldi	r31, 0x00	; 0
    15e0:	80 81       	ld	r24, Z
    15e2:	84 60       	ori	r24, 0x04	; 4
    15e4:	8c 93       	st	X, r24
    15e6:	15 c0       	rjmp	.+42     	; 0x1612 <Timer0_ClkSelect+0x1de>
		break;
	case EX_RISING:
		SET_BIT(TCCR0,TCCR0_CS00);
    15e8:	a3 e5       	ldi	r26, 0x53	; 83
    15ea:	b0 e0       	ldi	r27, 0x00	; 0
    15ec:	e3 e5       	ldi	r30, 0x53	; 83
    15ee:	f0 e0       	ldi	r31, 0x00	; 0
    15f0:	80 81       	ld	r24, Z
    15f2:	81 60       	ori	r24, 0x01	; 1
    15f4:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_CS01);
    15f6:	a3 e5       	ldi	r26, 0x53	; 83
    15f8:	b0 e0       	ldi	r27, 0x00	; 0
    15fa:	e3 e5       	ldi	r30, 0x53	; 83
    15fc:	f0 e0       	ldi	r31, 0x00	; 0
    15fe:	80 81       	ld	r24, Z
    1600:	82 60       	ori	r24, 0x02	; 2
    1602:	8c 93       	st	X, r24
		SET_BIT(TCCR0,TCCR0_CS02);
    1604:	a3 e5       	ldi	r26, 0x53	; 83
    1606:	b0 e0       	ldi	r27, 0x00	; 0
    1608:	e3 e5       	ldi	r30, 0x53	; 83
    160a:	f0 e0       	ldi	r31, 0x00	; 0
    160c:	80 81       	ld	r24, Z
    160e:	84 60       	ori	r24, 0x04	; 4
    1610:	8c 93       	st	X, r24
	}
}
    1612:	0f 90       	pop	r0
    1614:	0f 90       	pop	r0
    1616:	0f 90       	pop	r0
    1618:	cf 91       	pop	r28
    161a:	df 91       	pop	r29
    161c:	08 95       	ret

0000161e <READ_COUNT>:
//=================================================

uint8 READ_COUNT(){
    161e:	df 93       	push	r29
    1620:	cf 93       	push	r28
    1622:	cd b7       	in	r28, 0x3d	; 61
    1624:	de b7       	in	r29, 0x3e	; 62
	return TCNT0;
    1626:	e2 e5       	ldi	r30, 0x52	; 82
    1628:	f0 e0       	ldi	r31, 0x00	; 0
    162a:	80 81       	ld	r24, Z
}
    162c:	cf 91       	pop	r28
    162e:	df 91       	pop	r29
    1630:	08 95       	ret

00001632 <Timer0_SetCallBack>:




static void(*ptr)(void);
void Timer0_SetCallBack (void(*ROUTINE)(void)){
    1632:	df 93       	push	r29
    1634:	cf 93       	push	r28
    1636:	00 d0       	rcall	.+0      	; 0x1638 <Timer0_SetCallBack+0x6>
    1638:	cd b7       	in	r28, 0x3d	; 61
    163a:	de b7       	in	r29, 0x3e	; 62
    163c:	9a 83       	std	Y+2, r25	; 0x02
    163e:	89 83       	std	Y+1, r24	; 0x01
	ptr=ROUTINE;
    1640:	89 81       	ldd	r24, Y+1	; 0x01
    1642:	9a 81       	ldd	r25, Y+2	; 0x02
    1644:	90 93 69 00 	sts	0x0069, r25
    1648:	80 93 68 00 	sts	0x0068, r24
}
    164c:	0f 90       	pop	r0
    164e:	0f 90       	pop	r0
    1650:	cf 91       	pop	r28
    1652:	df 91       	pop	r29
    1654:	08 95       	ret

00001656 <__vector_10>:

static uint16 delay_val_ctc;
void __vector_10(void)  __attribute__((signal));
void __vector_10(void) {
    1656:	1f 92       	push	r1
    1658:	0f 92       	push	r0
    165a:	0f b6       	in	r0, 0x3f	; 63
    165c:	0f 92       	push	r0
    165e:	11 24       	eor	r1, r1
    1660:	2f 93       	push	r18
    1662:	3f 93       	push	r19
    1664:	4f 93       	push	r20
    1666:	5f 93       	push	r21
    1668:	6f 93       	push	r22
    166a:	7f 93       	push	r23
    166c:	8f 93       	push	r24
    166e:	9f 93       	push	r25
    1670:	af 93       	push	r26
    1672:	bf 93       	push	r27
    1674:	ef 93       	push	r30
    1676:	ff 93       	push	r31
    1678:	df 93       	push	r29
    167a:	cf 93       	push	r28
    167c:	cd b7       	in	r28, 0x3d	; 61
    167e:	de b7       	in	r29, 0x3e	; 62
	delay_val_ctc++;
    1680:	80 91 6a 00 	lds	r24, 0x006A
    1684:	90 91 6b 00 	lds	r25, 0x006B
    1688:	01 96       	adiw	r24, 0x01	; 1
    168a:	90 93 6b 00 	sts	0x006B, r25
    168e:	80 93 6a 00 	sts	0x006A, r24
	if(delay_val_ctc == 10000){
    1692:	80 91 6a 00 	lds	r24, 0x006A
    1696:	90 91 6b 00 	lds	r25, 0x006B
    169a:	27 e2       	ldi	r18, 0x27	; 39
    169c:	80 31       	cpi	r24, 0x10	; 16
    169e:	92 07       	cpc	r25, r18
    16a0:	49 f4       	brne	.+18     	; 0x16b4 <__vector_10+0x5e>
		ptr();
    16a2:	e0 91 68 00 	lds	r30, 0x0068
    16a6:	f0 91 69 00 	lds	r31, 0x0069
    16aa:	09 95       	icall
		delay_val_ctc = 0;
    16ac:	10 92 6b 00 	sts	0x006B, r1
    16b0:	10 92 6a 00 	sts	0x006A, r1
	}
}
    16b4:	cf 91       	pop	r28
    16b6:	df 91       	pop	r29
    16b8:	ff 91       	pop	r31
    16ba:	ef 91       	pop	r30
    16bc:	bf 91       	pop	r27
    16be:	af 91       	pop	r26
    16c0:	9f 91       	pop	r25
    16c2:	8f 91       	pop	r24
    16c4:	7f 91       	pop	r23
    16c6:	6f 91       	pop	r22
    16c8:	5f 91       	pop	r21
    16ca:	4f 91       	pop	r20
    16cc:	3f 91       	pop	r19
    16ce:	2f 91       	pop	r18
    16d0:	0f 90       	pop	r0
    16d2:	0f be       	out	0x3f, r0	; 63
    16d4:	0f 90       	pop	r0
    16d6:	1f 90       	pop	r1
    16d8:	18 95       	reti

000016da <F_PWM_OCR>:


//=================================================

void F_PWM_OCR(uint8 ocr){
    16da:	df 93       	push	r29
    16dc:	cf 93       	push	r28
    16de:	0f 92       	push	r0
    16e0:	cd b7       	in	r28, 0x3d	; 61
    16e2:	de b7       	in	r29, 0x3e	; 62
    16e4:	89 83       	std	Y+1, r24	; 0x01
	OCR0 = ocr;
    16e6:	ec e5       	ldi	r30, 0x5C	; 92
    16e8:	f0 e0       	ldi	r31, 0x00	; 0
    16ea:	89 81       	ldd	r24, Y+1	; 0x01
    16ec:	80 83       	st	Z, r24
}
    16ee:	0f 90       	pop	r0
    16f0:	cf 91       	pop	r28
    16f2:	df 91       	pop	r29
    16f4:	08 95       	ret

000016f6 <Timer1_Init>:

//=================================================

void Timer1_Init(void){
    16f6:	df 93       	push	r29
    16f8:	cf 93       	push	r28
    16fa:	cd b7       	in	r28, 0x3d	; 61
    16fc:	de b7       	in	r29, 0x3e	; 62

	DIO_SetPinDirection(PORT_D, PIN5, OUTPUT_PIN);
    16fe:	83 e0       	ldi	r24, 0x03	; 3
    1700:	65 e0       	ldi	r22, 0x05	; 5
    1702:	41 e0       	ldi	r20, 0x01	; 1
    1704:	0e 94 6f 05 	call	0xade	; 0xade <DIO_SetPinDirection>

	/* Set on top clear on compare */
	SET_BIT(TCCR1A,7);
    1708:	af e4       	ldi	r26, 0x4F	; 79
    170a:	b0 e0       	ldi	r27, 0x00	; 0
    170c:	ef e4       	ldi	r30, 0x4F	; 79
    170e:	f0 e0       	ldi	r31, 0x00	; 0
    1710:	80 81       	ld	r24, Z
    1712:	80 68       	ori	r24, 0x80	; 128
    1714:	8c 93       	st	X, r24
	CLR_BIT(TCCR1A,6);
    1716:	af e4       	ldi	r26, 0x4F	; 79
    1718:	b0 e0       	ldi	r27, 0x00	; 0
    171a:	ef e4       	ldi	r30, 0x4F	; 79
    171c:	f0 e0       	ldi	r31, 0x00	; 0
    171e:	80 81       	ld	r24, Z
    1720:	8f 7b       	andi	r24, 0xBF	; 191
    1722:	8c 93       	st	X, r24

	/* Waveform Generation: Fast PWM, Top = ICR1 */
	CLR_BIT(TCCR1A,0);
    1724:	af e4       	ldi	r26, 0x4F	; 79
    1726:	b0 e0       	ldi	r27, 0x00	; 0
    1728:	ef e4       	ldi	r30, 0x4F	; 79
    172a:	f0 e0       	ldi	r31, 0x00	; 0
    172c:	80 81       	ld	r24, Z
    172e:	8e 7f       	andi	r24, 0xFE	; 254
    1730:	8c 93       	st	X, r24
	SET_BIT(TCCR1A,1);
    1732:	af e4       	ldi	r26, 0x4F	; 79
    1734:	b0 e0       	ldi	r27, 0x00	; 0
    1736:	ef e4       	ldi	r30, 0x4F	; 79
    1738:	f0 e0       	ldi	r31, 0x00	; 0
    173a:	80 81       	ld	r24, Z
    173c:	82 60       	ori	r24, 0x02	; 2
    173e:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,3);
    1740:	ae e4       	ldi	r26, 0x4E	; 78
    1742:	b0 e0       	ldi	r27, 0x00	; 0
    1744:	ee e4       	ldi	r30, 0x4E	; 78
    1746:	f0 e0       	ldi	r31, 0x00	; 0
    1748:	80 81       	ld	r24, Z
    174a:	88 60       	ori	r24, 0x08	; 8
    174c:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,4);
    174e:	ae e4       	ldi	r26, 0x4E	; 78
    1750:	b0 e0       	ldi	r27, 0x00	; 0
    1752:	ee e4       	ldi	r30, 0x4E	; 78
    1754:	f0 e0       	ldi	r31, 0x00	; 0
    1756:	80 81       	ld	r24, Z
    1758:	80 61       	ori	r24, 0x10	; 16
    175a:	8c 93       	st	X, r24

	/* Select Prescalar 8*/
	CLR_BIT(TCCR1B,0);
    175c:	ae e4       	ldi	r26, 0x4E	; 78
    175e:	b0 e0       	ldi	r27, 0x00	; 0
    1760:	ee e4       	ldi	r30, 0x4E	; 78
    1762:	f0 e0       	ldi	r31, 0x00	; 0
    1764:	80 81       	ld	r24, Z
    1766:	8e 7f       	andi	r24, 0xFE	; 254
    1768:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,1);
    176a:	ae e4       	ldi	r26, 0x4E	; 78
    176c:	b0 e0       	ldi	r27, 0x00	; 0
    176e:	ee e4       	ldi	r30, 0x4E	; 78
    1770:	f0 e0       	ldi	r31, 0x00	; 0
    1772:	80 81       	ld	r24, Z
    1774:	82 60       	ori	r24, 0x02	; 2
    1776:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B,2);
    1778:	ae e4       	ldi	r26, 0x4E	; 78
    177a:	b0 e0       	ldi	r27, 0x00	; 0
    177c:	ee e4       	ldi	r30, 0x4E	; 78
    177e:	f0 e0       	ldi	r31, 0x00	; 0
    1780:	80 81       	ld	r24, Z
    1782:	8b 7f       	andi	r24, 0xFB	; 251
    1784:	8c 93       	st	X, r24

	/* Set overflow time = period = 20000 */

	ICR1 = 20000;
    1786:	e6 e4       	ldi	r30, 0x46	; 70
    1788:	f0 e0       	ldi	r31, 0x00	; 0
    178a:	80 e2       	ldi	r24, 0x20	; 32
    178c:	9e e4       	ldi	r25, 0x4E	; 78
    178e:	91 83       	std	Z+1, r25	; 0x01
    1790:	80 83       	st	Z, r24

}
    1792:	cf 91       	pop	r28
    1794:	df 91       	pop	r29
    1796:	08 95       	ret

00001798 <Servo_Go>:

//=================================================

void Servo_Go(uint16 Degree){
    1798:	df 93       	push	r29
    179a:	cf 93       	push	r28
    179c:	00 d0       	rcall	.+0      	; 0x179e <Servo_Go+0x6>
    179e:	cd b7       	in	r28, 0x3d	; 61
    17a0:	de b7       	in	r29, 0x3e	; 62
    17a2:	9a 83       	std	Y+2, r25	; 0x02
    17a4:	89 83       	std	Y+1, r24	; 0x01
	//uint16 Ocr_Val =  mapRange(Degree, 0, 180, 1000, 2000);
		OCR1A = Degree;
    17a6:	ea e4       	ldi	r30, 0x4A	; 74
    17a8:	f0 e0       	ldi	r31, 0x00	; 0
    17aa:	89 81       	ldd	r24, Y+1	; 0x01
    17ac:	9a 81       	ldd	r25, Y+2	; 0x02
    17ae:	91 83       	std	Z+1, r25	; 0x01
    17b0:	80 83       	st	Z, r24
}
    17b2:	0f 90       	pop	r0
    17b4:	0f 90       	pop	r0
    17b6:	cf 91       	pop	r28
    17b8:	df 91       	pop	r29
    17ba:	08 95       	ret

000017bc <mapRange>:

//=================================================

double mapRange(double value, double oldMin, double oldMax, double newMin, double newMax) {
    17bc:	af 92       	push	r10
    17be:	bf 92       	push	r11
    17c0:	cf 92       	push	r12
    17c2:	df 92       	push	r13
    17c4:	ef 92       	push	r14
    17c6:	ff 92       	push	r15
    17c8:	0f 93       	push	r16
    17ca:	1f 93       	push	r17
    17cc:	df 93       	push	r29
    17ce:	cf 93       	push	r28
    17d0:	cd b7       	in	r28, 0x3d	; 61
    17d2:	de b7       	in	r29, 0x3e	; 62
    17d4:	64 97       	sbiw	r28, 0x14	; 20
    17d6:	0f b6       	in	r0, 0x3f	; 63
    17d8:	f8 94       	cli
    17da:	de bf       	out	0x3e, r29	; 62
    17dc:	0f be       	out	0x3f, r0	; 63
    17de:	cd bf       	out	0x3d, r28	; 61
    17e0:	69 83       	std	Y+1, r22	; 0x01
    17e2:	7a 83       	std	Y+2, r23	; 0x02
    17e4:	8b 83       	std	Y+3, r24	; 0x03
    17e6:	9c 83       	std	Y+4, r25	; 0x04
    17e8:	2d 83       	std	Y+5, r18	; 0x05
    17ea:	3e 83       	std	Y+6, r19	; 0x06
    17ec:	4f 83       	std	Y+7, r20	; 0x07
    17ee:	58 87       	std	Y+8, r21	; 0x08
    17f0:	e9 86       	std	Y+9, r14	; 0x09
    17f2:	fa 86       	std	Y+10, r15	; 0x0a
    17f4:	0b 87       	std	Y+11, r16	; 0x0b
    17f6:	1c 87       	std	Y+12, r17	; 0x0c
    17f8:	ad 86       	std	Y+13, r10	; 0x0d
    17fa:	be 86       	std	Y+14, r11	; 0x0e
    17fc:	cf 86       	std	Y+15, r12	; 0x0f
    17fe:	d8 8a       	std	Y+16, r13	; 0x10
    // Check for division by zero to avoid errors
    if (oldMin == oldMax) {
    1800:	6d 81       	ldd	r22, Y+5	; 0x05
    1802:	7e 81       	ldd	r23, Y+6	; 0x06
    1804:	8f 81       	ldd	r24, Y+7	; 0x07
    1806:	98 85       	ldd	r25, Y+8	; 0x08
    1808:	29 85       	ldd	r18, Y+9	; 0x09
    180a:	3a 85       	ldd	r19, Y+10	; 0x0a
    180c:	4b 85       	ldd	r20, Y+11	; 0x0b
    180e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1810:	0e 94 99 03 	call	0x732	; 0x732 <__eqsf2>
    1814:	88 23       	and	r24, r24
    1816:	49 f4       	brne	.+18     	; 0x182a <mapRange+0x6e>
        return newMin; // Return newMin when oldMin equals oldMax
    1818:	8d 85       	ldd	r24, Y+13	; 0x0d
    181a:	9e 85       	ldd	r25, Y+14	; 0x0e
    181c:	af 85       	ldd	r26, Y+15	; 0x0f
    181e:	b8 89       	ldd	r27, Y+16	; 0x10
    1820:	89 8b       	std	Y+17, r24	; 0x11
    1822:	9a 8b       	std	Y+18, r25	; 0x12
    1824:	ab 8b       	std	Y+19, r26	; 0x13
    1826:	bc 8b       	std	Y+20, r27	; 0x14
    1828:	46 c0       	rjmp	.+140    	; 0x18b6 <mapRange+0xfa>
    }

    // Perform the linear mapping
    return ((value - oldMin) / (oldMax - oldMin)) * (newMax - newMin) + newMin;
    182a:	69 81       	ldd	r22, Y+1	; 0x01
    182c:	7a 81       	ldd	r23, Y+2	; 0x02
    182e:	8b 81       	ldd	r24, Y+3	; 0x03
    1830:	9c 81       	ldd	r25, Y+4	; 0x04
    1832:	2d 81       	ldd	r18, Y+5	; 0x05
    1834:	3e 81       	ldd	r19, Y+6	; 0x06
    1836:	4f 81       	ldd	r20, Y+7	; 0x07
    1838:	58 85       	ldd	r21, Y+8	; 0x08
    183a:	0e 94 95 01 	call	0x32a	; 0x32a <__subsf3>
    183e:	dc 01       	movw	r26, r24
    1840:	cb 01       	movw	r24, r22
    1842:	7c 01       	movw	r14, r24
    1844:	8d 01       	movw	r16, r26
    1846:	69 85       	ldd	r22, Y+9	; 0x09
    1848:	7a 85       	ldd	r23, Y+10	; 0x0a
    184a:	8b 85       	ldd	r24, Y+11	; 0x0b
    184c:	9c 85       	ldd	r25, Y+12	; 0x0c
    184e:	2d 81       	ldd	r18, Y+5	; 0x05
    1850:	3e 81       	ldd	r19, Y+6	; 0x06
    1852:	4f 81       	ldd	r20, Y+7	; 0x07
    1854:	58 85       	ldd	r21, Y+8	; 0x08
    1856:	0e 94 95 01 	call	0x32a	; 0x32a <__subsf3>
    185a:	dc 01       	movw	r26, r24
    185c:	cb 01       	movw	r24, r22
    185e:	9c 01       	movw	r18, r24
    1860:	ad 01       	movw	r20, r26
    1862:	c8 01       	movw	r24, r16
    1864:	b7 01       	movw	r22, r14
    1866:	0e 94 ed 02 	call	0x5da	; 0x5da <__divsf3>
    186a:	dc 01       	movw	r26, r24
    186c:	cb 01       	movw	r24, r22
    186e:	7c 01       	movw	r14, r24
    1870:	8d 01       	movw	r16, r26
    1872:	69 a1       	ldd	r22, Y+33	; 0x21
    1874:	7a a1       	ldd	r23, Y+34	; 0x22
    1876:	8b a1       	ldd	r24, Y+35	; 0x23
    1878:	9c a1       	ldd	r25, Y+36	; 0x24
    187a:	2d 85       	ldd	r18, Y+13	; 0x0d
    187c:	3e 85       	ldd	r19, Y+14	; 0x0e
    187e:	4f 85       	ldd	r20, Y+15	; 0x0f
    1880:	58 89       	ldd	r21, Y+16	; 0x10
    1882:	0e 94 95 01 	call	0x32a	; 0x32a <__subsf3>
    1886:	dc 01       	movw	r26, r24
    1888:	cb 01       	movw	r24, r22
    188a:	9c 01       	movw	r18, r24
    188c:	ad 01       	movw	r20, r26
    188e:	c8 01       	movw	r24, r16
    1890:	b7 01       	movw	r22, r14
    1892:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1896:	dc 01       	movw	r26, r24
    1898:	cb 01       	movw	r24, r22
    189a:	bc 01       	movw	r22, r24
    189c:	cd 01       	movw	r24, r26
    189e:	2d 85       	ldd	r18, Y+13	; 0x0d
    18a0:	3e 85       	ldd	r19, Y+14	; 0x0e
    18a2:	4f 85       	ldd	r20, Y+15	; 0x0f
    18a4:	58 89       	ldd	r21, Y+16	; 0x10
    18a6:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    18aa:	dc 01       	movw	r26, r24
    18ac:	cb 01       	movw	r24, r22
    18ae:	89 8b       	std	Y+17, r24	; 0x11
    18b0:	9a 8b       	std	Y+18, r25	; 0x12
    18b2:	ab 8b       	std	Y+19, r26	; 0x13
    18b4:	bc 8b       	std	Y+20, r27	; 0x14
    18b6:	89 89       	ldd	r24, Y+17	; 0x11
    18b8:	9a 89       	ldd	r25, Y+18	; 0x12
    18ba:	ab 89       	ldd	r26, Y+19	; 0x13
    18bc:	bc 89       	ldd	r27, Y+20	; 0x14
}
    18be:	bc 01       	movw	r22, r24
    18c0:	cd 01       	movw	r24, r26
    18c2:	64 96       	adiw	r28, 0x14	; 20
    18c4:	0f b6       	in	r0, 0x3f	; 63
    18c6:	f8 94       	cli
    18c8:	de bf       	out	0x3e, r29	; 62
    18ca:	0f be       	out	0x3f, r0	; 63
    18cc:	cd bf       	out	0x3d, r28	; 61
    18ce:	cf 91       	pop	r28
    18d0:	df 91       	pop	r29
    18d2:	1f 91       	pop	r17
    18d4:	0f 91       	pop	r16
    18d6:	ff 90       	pop	r15
    18d8:	ef 90       	pop	r14
    18da:	df 90       	pop	r13
    18dc:	cf 90       	pop	r12
    18de:	bf 90       	pop	r11
    18e0:	af 90       	pop	r10
    18e2:	08 95       	ret

000018e4 <main>:
#include "DIO/DIO_interface.h"
#include "Timer_interface.h"
#include "util/delay.h"


int main(){
    18e4:	df 93       	push	r29
    18e6:	cf 93       	push	r28
    18e8:	cd b7       	in	r28, 0x3d	; 61
    18ea:	de b7       	in	r29, 0x3e	; 62

	Timer1_Init();
    18ec:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <Timer1_Init>
//		for(int i=1000 ; i< 2000 ; i += 100){
//			Servo_Go(i);
//			_delay_ms(30);
//		}

		Servo_Go(1500);
    18f0:	8c ed       	ldi	r24, 0xDC	; 220
    18f2:	95 e0       	ldi	r25, 0x05	; 5
    18f4:	0e 94 cc 0b 	call	0x1798	; 0x1798 <Servo_Go>
    18f8:	fb cf       	rjmp	.-10     	; 0x18f0 <main+0xc>

000018fa <__prologue_saves__>:
    18fa:	2f 92       	push	r2
    18fc:	3f 92       	push	r3
    18fe:	4f 92       	push	r4
    1900:	5f 92       	push	r5
    1902:	6f 92       	push	r6
    1904:	7f 92       	push	r7
    1906:	8f 92       	push	r8
    1908:	9f 92       	push	r9
    190a:	af 92       	push	r10
    190c:	bf 92       	push	r11
    190e:	cf 92       	push	r12
    1910:	df 92       	push	r13
    1912:	ef 92       	push	r14
    1914:	ff 92       	push	r15
    1916:	0f 93       	push	r16
    1918:	1f 93       	push	r17
    191a:	cf 93       	push	r28
    191c:	df 93       	push	r29
    191e:	cd b7       	in	r28, 0x3d	; 61
    1920:	de b7       	in	r29, 0x3e	; 62
    1922:	ca 1b       	sub	r28, r26
    1924:	db 0b       	sbc	r29, r27
    1926:	0f b6       	in	r0, 0x3f	; 63
    1928:	f8 94       	cli
    192a:	de bf       	out	0x3e, r29	; 62
    192c:	0f be       	out	0x3f, r0	; 63
    192e:	cd bf       	out	0x3d, r28	; 61
    1930:	09 94       	ijmp

00001932 <__epilogue_restores__>:
    1932:	2a 88       	ldd	r2, Y+18	; 0x12
    1934:	39 88       	ldd	r3, Y+17	; 0x11
    1936:	48 88       	ldd	r4, Y+16	; 0x10
    1938:	5f 84       	ldd	r5, Y+15	; 0x0f
    193a:	6e 84       	ldd	r6, Y+14	; 0x0e
    193c:	7d 84       	ldd	r7, Y+13	; 0x0d
    193e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1940:	9b 84       	ldd	r9, Y+11	; 0x0b
    1942:	aa 84       	ldd	r10, Y+10	; 0x0a
    1944:	b9 84       	ldd	r11, Y+9	; 0x09
    1946:	c8 84       	ldd	r12, Y+8	; 0x08
    1948:	df 80       	ldd	r13, Y+7	; 0x07
    194a:	ee 80       	ldd	r14, Y+6	; 0x06
    194c:	fd 80       	ldd	r15, Y+5	; 0x05
    194e:	0c 81       	ldd	r16, Y+4	; 0x04
    1950:	1b 81       	ldd	r17, Y+3	; 0x03
    1952:	aa 81       	ldd	r26, Y+2	; 0x02
    1954:	b9 81       	ldd	r27, Y+1	; 0x01
    1956:	ce 0f       	add	r28, r30
    1958:	d1 1d       	adc	r29, r1
    195a:	0f b6       	in	r0, 0x3f	; 63
    195c:	f8 94       	cli
    195e:	de bf       	out	0x3e, r29	; 62
    1960:	0f be       	out	0x3f, r0	; 63
    1962:	cd bf       	out	0x3d, r28	; 61
    1964:	ed 01       	movw	r28, r26
    1966:	08 95       	ret

00001968 <_exit>:
    1968:	f8 94       	cli

0000196a <__stop_program>:
    196a:	ff cf       	rjmp	.-2      	; 0x196a <__stop_program>
