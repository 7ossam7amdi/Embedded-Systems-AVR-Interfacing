/********************************************************/
/*	Name	: EXTINT_program.c	   					    */
/*  Layer	: MCAL										*/
/*	Author	: Hossam Hamdy								*/
/* 	Date	: 20 September	2023						*/
/*	Version	: V01										*/
/********************************************************/

#include "LIB/Std_Types.h"
#include "LIB/Bit_Math.h"
#include "DIO/DIO_interface.h"
#include "EXTINT_interface.h"

#include "EXTINT_register.h"
#include "EXTINT_private.h"
#include "EXTINT_config.h"


void EXTINT_Int1Init(void){

	/* Set Sense Control of INT1 */

	switch (INT1_SENSE){

	case FALLING_EDGE:
		CLR_BIT(MCUCR,MCUCR_ISC10);
		SET_BIT(MCUCR,MCUCR_ISC11);
		break;

	case RISING_EDGE:
		SET_BIT(MCUCR,MCUCR_ISC10);
		SET_BIT(MCUCR,MCUCR_ISC11);
		break;

	case ON_CHANGE:
		SET_BIT(MCUCR,MCUCR_ISC10);
		CLR_BIT(MCUCR,MCUCR_ISC11);
		break;

	case LOW_LEVEL:
		CLR_BIT(MCUCR,MCUCR_ISC10);
		CLR_BIT(MCUCR,MCUCR_ISC11);
		break;

	}

	/* Enable PIE of INT1 */

	SET_BIT(GICR,GICR_INT1);
}

/********************************************************/

void EXTINT_Int0Init(void){

	/* Set Sense Control of INT0 */

	switch (INT0_SENSE){

	case FALLING_EDGE:
		CLR_BIT(MCUCR,MCUCR_ISC00);
		SET_BIT(MCUCR,MCUCR_ISC01);
		break;

	case RISING_EDGE:
		SET_BIT(MCUCR,MCUCR_ISC00);
		SET_BIT(MCUCR,MCUCR_ISC01);
		break;

	case ON_CHANGE:
		SET_BIT(MCUCR,MCUCR_ISC00);
		CLR_BIT(MCUCR,MCUCR_ISC01);
		break;

	case LOW_LEVEL:
		CLR_BIT(MCUCR,MCUCR_ISC00);
		CLR_BIT(MCUCR,MCUCR_ISC01);
		break;

	}

	/* Enable PIE of INT0 */

	SET_BIT(GICR,GICR_INT0);

}

/********************************************************/

void EXTINT_Int2Init(void){

	/* Set Sense Control of INT2 */

	if(INT2_SENSE == FALLING_EDGE)
	{
		CLR_BIT(MCUCSR, MCUCR_ISC2);
	}
	else if(INT2_SENSE == RISING_EDGE)
	{
		SET_BIT(MCUCSR, MCUCR_ISC2);
	}

	/* Enable PIE of INT2 */

	SET_BIT(GICR,GICR_INT2);
}
